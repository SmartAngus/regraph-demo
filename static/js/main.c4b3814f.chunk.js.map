{"version":3,"sources":["editor/defines.tsx","editor/components/NodePanel.tsx","editor/utils/FullsreenUtils.ts","editor/components/Toolbar.tsx","editor/components/Edge.tsx","editor/utils/types.ts","editor/components/Node.tsx","editor/hooks/useResize.tsx","editor/utils/calc.ts","editor/utils/useDragSelect.ts","editor/components/DragSelector.tsx","editor/ContextMenu.tsx","editor/hooks/useClickAway.tsx","editor/EditorNode.tsx","editor/EditorEdges.tsx","editor/utils/find.ts","utils.tsx","editor/CanvasContent.tsx","editor/mock.ts","editor/hooks/useEditorStore.tsx","editor/hooks/useKeyPress.tsx","editor/index.tsx","index.tsx","App.tsx"],"names":["ComponentType","OutputType","ComponentMap","common","ComponentKey","COMMON_COMPONENT","type","key","rect","name","width","height","icon","style","border","disabled","circle","xmlns","version","cx","cy","r","stroke","strokeWidth","fill","COMPONENT_CATEGORY","OperateType","useState","React","Panel","Collapse","NodePanel","props","componnetList","Object","values","onDrag","visible","collapseKey","setCollapseKey","boxClass","classNames","handleDrag","item","className","activeKey","onChange","items","bordered","accordion","map","total","length","header","child","boxItemClass","draggable","bind","isFull","doc","document","fullscreenElement","webkitFullscreenElement","Toolbar","ref","screenScale","changeScreenScale","handleResizeTo","onShear","onCopy","onPaste","onDelete","scale","String","Math","round","isFullScreen","includes","isZoom","isShear","isCopy","isPaste","isDelete","fullscreenStatus","handleResize","isLager","value","handleFullScreen","element","exitFullscreen","webkitExitFullscreen","current","requestFullscreen","mozRequestFullScreen","msRequestFullscreen","webkitRequestFullscreen","fullScreenClassName","fullscreen","onClick","renderButtons","Edge","id","onContextMenu","object","lineAppendWidth","path","startArrow","endArrow","markerStart","endStart","markerWidth","markerHeight","refX","refY","orient","markerUnits","d","_","markerEnd","useRef","useEffect","Node","x","y","children","currTrans","isSelected","onResize","showSelector","setShowSelector","containerRef","isResize","nodeWidth","setNodeWidth","nodeHeight","setNodeHeight","nodeLeft","setNodeLeft","nodeTop","setNodeTop","resizers","querySelectorAll","querySelector","originWidth","originHeight","originMouseX","originMouseY","i","currentResizer","addEventListener","e","preventDefault","parseFloat","getComputedStyle","getPropertyValue","replace","getBoundingClientRect","left","top","pageX","pageY","window","resize","stopResize","newWidth","newHeight","classList","contains","removeEventListener","useResize","resizeWidth","resizeHeight","resizeX","resizeY","NODE_SELECTOR","position","right","renderResize","data-type","renderNodeSelector","data-position","href","onMouseEnter","onMouseLeave","event","stopPropagation","container","domNode","offsetTop","offsetLeft","targetDomNode","body","offsetParent","getOffset","screenX","clientX","screenY","clientY","newX","k","newY","quadratic","sourcePoint","targetPoint","centerX","centerY","tolerance","sub","max","abs","join","calcLinkPosition","node","ContextMenu","display","useClickAway","onClickAway","dom","eventName","handler","useCallback","el","target","EditorNode","currentNode","onSelect","hasError","isDragged","interactive","nodeRef","menuShow","setMenuShow","menuPos","setMenuPos","menuRef","editorNodeRef","borderColor","isCircle","borderClass","dragging","menuList","delete","handleClickMenu","handleClickNode","newPosition","getPopupContainer","triggerNode","parentNode","Item","EditorEdges","links","nodes","selectedLinks","onSelectLink","isDraggingLink","dragLink","edgesPath","link","source","sourcePos","targetPos","uNode","vertex","vNode","sourceX","sourceY","targetX","targetY","pathData","originX","originY","renderDraggingLink","findNearbyNode","point","range","targetNode","minDis","Infinity","forEach","v","minDistance","sqrt","distance","Utils","Point","CanvasContent","nodesContainerRef","handleApplyTransform","screenWidth","screenHeight","autoVerticalScroller","autoHorizontalScroller","handleAdapt","openContainerMenu","toggleDragNode","isDraggingNode","onDragNodeMouseMove","onDragNodeMouseUp","toggleDragLink","onDragLinkMouseMove","onDragLinkMouseUp","setState","preState","onNodesContainerMouseDown","component","c","dataset","onDragLinkMouseDown","onDragNodeMouseDown","onContainerMouseDown","hasNodeOrLink","handleClearActive","onNodesContainerMouseMove","isNodeOrLink","currentHoverNode","dragNode","dragNodeOffset","originId","setLinks","state","nearNode","newLink","setNodes","getTransformInfo","getScreenHandler","handleMap","setSelectedLinks","setSelectedNodes","array","inNode","inLink","index","slice","onClickNode","selectedNodes","isKeyPressing","onSelectNode","deleteNodes","onContextMenuLink","currentPos","deleteVisible","updateNodes","renderCanvas","menuDisplay","zoomIdentity","this","nextProps","nextState","newNode","NODE_WIDTH","NODE_HEIGHT","uuid","needMinimap","needRefresh","zoomEnabled","mapPosition","mapWidth","mapHeight","onScreenChange","onDragOver","onDrop","mockData","fileId","tenantId","projectId","userId","owner","ownerName","createTime","lastModifier","lastModifierName","lastModifyTime","nodeConfig","nodeId","nodeName","nodeOutputNameList","nodeDesc","nodeType","operatorType","cronExpression","nodeContent","remark","params","dsConfig","dsId","dagId","rerunable","validPeriod","priority","nodeStatus","paused","upstreams","dayDiff","periodDiff","sourceNodeId","sourceNodeOutputName","targetNodeId","targetNodeOutputName","nodeFrom","nodeOwner","tags","faultTolerantConfig","errorCount","errorRate","readCount","hops","steps","distribute","parallel","aliasKeyCodeMap","esc","tab","enter","space","up","down","aliasKeyMap","modifierKey","ctrl","ctrlKey","shift","shiftKey","alt","altKey","meta","metaKey","noop","isType","obj","prototype","toString","call","toLowerCase","genFilterKey","keyFilter","keyCode","genArr","split","genLen","genModifier","aliasKey","aliasKeyCode","toUpperCase","genKeyFormater","some","defaultEvents","useKeyPress","eventHandler","option","events","callbackRef","callbackHandler","genGuard","targetElement","EditorDemo","editorData","setEditorData","setDragNode","copiedNodes","setCopiedNodes","newNodes","updateLinks","useEditorStore","screenRef","canvasRef","getWrappedInstance","canvasInstance","handleDeleteNodes","ids","newLinks","cloneNodes","handleDeleteLinks","activeLinks","linkList","diffLinks","handleNodesCopy","newCopiedNodes","handleShear","handleCopy","handlePaste","currentCopied","handleNodesPaste","handleDelete","isMac","navigator","platform","startsWith","renderOperation","layout","renderNodePanel","deleteLinks","renderProperty","rootElement","getElementById","render"],"mappings":"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","file":"static/js/main.c4b3814f.chunk.js","sourcesContent":["/**\n * @file 管道画布常量定义\n */\n\nimport * as React from \"react\";\nimport * as _ from \"lodash\";\nimport { Icon } from \"antd\";\n\n// 组件卡片宽度高度\nexport const NODE_WIDTH = 220;\nexport const NODE_HEIGHT = 60;\n\n// 右边菜单栏宽度\nexport const MENU_WIDTH = 120;\nexport const MENU_HEIGHT = 196;\n// 右边抽屉宽度-通用\nexport const RIGHTDRAWER_WIDTH = 521;\n// 右边抽屉宽度-调度配置\nexport const SHECHEDULE_RIGHTDRAWER_WIDTH = 750;\n\n// 支持缩放的最大值跟最小值\nexport const MAX_SCALE = 200;\nexport const MIN_SCALE = 50;\n\n// 组件之间的间距\nexport const COMPONENT_DISTANCE = 30;\n\n// 全屏状态的坐标差,顶部导航到画布的距离\nexport const fullscreenDiffY = 130;\n\n// 顶部导航到画布的固定举例，用于计算Context\nexport const CONTEXT_HEIGHT_DIFF = 155;\n\n// 连接符\nexport const CONNECTOR = \"_\";\n\n// 连线可连线的区域\nexport const LINK_AREA = 30;\n\n// 连线不同状态的颜色\n// 未连接状态\nexport const UNLINK = \"#52619b\";\n// 选中状态\nexport const ACTIVE = \"#92ade3\";\n// 连接状态\nexport const LINK = \"#b4bdcf\";\n\n// 管道节点code为30，为固定值\nexport const operatorTypeCode = 30;\n\ninterface StatusItem {\n  key: string;\n  text: string;\n  icon: React.ReactNode;\n}\n\n// 组件库类型\nexport enum ComponentType {\n  /** 通用 */\n  common = \"common\"\n  /** 自定义 */\n  // self = 'self'\n}\n\nexport const ComponentMap: Record<ComponentType, string> = {\n  [ComponentType.common]: \"通用\"\n  // [ComponentType.self]: '自定义'\n};\n\nexport class Node {\n  /** 组件类型 */\n  type?: string;\n\n  /** 组件key */\n  key: string;\n\n  /** 组件名称 */\n  name: string;\n\n  /** 组件icon */\n  icon?: React.ReactNode;\n\n  /** 组件在画布中的横坐标 */\n  x?: number;\n\n  /** 组件在画布中的纵坐标 */\n  y?: number;\n  /** 生成 id */\n\n  width?: number;\n\n  height?: number;\n\n  id?: string;\n\n  /** 对应的 ref */\n  ref?: any;\n\n  /** 数据分发方式, true:轮流 false:copy */\n  distribute?: boolean;\n\n  /** 其他配置信息 */\n  webConfig?: {};\n\n  disabled?: boolean;\n}\n\nexport class NodePanel {\n  type: string;\n\n  key: string;\n\n  name: string;\n\n  icon: React.ReactNode;\n\n  disabled: boolean;\n}\n\nexport enum OutputType {\n  /** 主步骤输出 */\n  mainOutput = \"mainOutput\",\n  /** 错误步骤输出 */\n  errorOutput = \"errorOutput\"\n}\n\nexport type LINK_POSITION = \"left\" | \"right\" | \"top\" | \"bottom\";\n\nexport interface Link {\n  /** 连线的唯一id, source+CONNECTOR+target的形式 */\n  id: string;\n  /** 来源节点id */\n  source: string;\n  /** 去向节点id */\n  target: string;\n  /** 来源节点位置 */\n  sourcePos?: string;\n  /** 去向节点位置 */\n  targetPos?: string;\n}\n\nexport type LinkType = \"error\" | \"distribute\" | \"copy\";\n\n// 连线中不同状态的icon\nexport const LinkTypeIconMap: Record<LinkType, string> = {\n  error: \"icon-cuowu\",\n  distribute: \"icon-fenfa\",\n  copy: \"icon-fuzhi1\"\n};\n\n// 连线中的icon，宽高\nexport const LINKICON_WIDTH = 18;\nexport const LINKICON_HEIGHT = 18;\n\nexport enum ComponentKey {\n  rect = \"rect\",\n  circle = \"circle\",\n  polygon = \"polygon\",\n  ellipse = \"ellipse\",\n  star = \"star\"\n}\n\n// 单元类型\n// 输入组件\nconst COMMON_COMPONENT: Node[] = [\n  /** 矩形 */\n  {\n    type: ComponentType.common,\n    key: ComponentKey.rect,\n    name: \"RECT\",\n    width: 100,\n    height: 100,\n    icon: (\n      <div style={{ width: 36, height: 36, border: \"2px solid #52619b\" }} />\n    ),\n    disabled: false\n  },\n  /** 圆形 */\n  {\n    type: ComponentType.common,\n    key: ComponentKey.circle,\n    name: \"CIRCLE\",\n    width: 100,\n    height: 100,\n    icon: (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        version=\"1.1\"\n        width=\"72px\"\n        height=\"40px\"\n      >\n        <circle\n          cx=\"36\"\n          cy=\"20\"\n          r=\"18\"\n          stroke=\"#52619b\"\n          strokeWidth=\"2\"\n          fill=\"transparent\"\n        />\n      </svg>\n    ),\n    disabled: false\n  }\n  /** 多边形 */\n  // {\n  //   type: ComponentType.common,\n  //   key: ComponentKey.polygon,\n  //   name: 'POLYGON',\n  //   icon: <Icon type=\"border\" />,\n  //   width: 100,\n  //   height: 100,\n  //   disabled: true\n  // },\n  // /** 椭圆 */\n  // {\n  //   type: ComponentType.common,\n  //   key: ComponentKey.ellipse,\n  //   name: 'ELLIPSE',\n  //   icon: <Icon type=\"border\" />,\n  //   width: 100,\n  //   height: 100,\n  //   disabled: true\n  // }\n];\n\n// const SELF_COMPONENT: Node[] = [\n//   {\n//     type: ComponentType.self,\n//     key: ComponentKey.star,\n//     name: 'STAR'\n//   }\n// ];\n\n// 组件库类目\nexport const COMPONENT_CATEGORY: Record<ComponentType, Node[]> = {\n  [ComponentType.common]: COMMON_COMPONENT\n  // [ComponentType.self]: SELF_COMPONENT\n};\n\nexport const keyCodeMap = {\n  delete: 8,\n  copy: 67,\n  paste: 86\n};\n\n/** 处理弹窗全屏挂载 */\nexport function getContainer() {\n  const pipelineDoms = document.getElementsByClassName(\"pipeline-canvas\");\n  return _.find(\n    pipelineDoms,\n    dom => (dom as HTMLElement).offsetParent\n  ) as HTMLElement;\n}\n\n/**\n * @file 类型定义文件\n */\nclass Vertex {\n  id: string;\n\n  x: number;\n\n  y: number;\n\n  width: number;\n\n  height: number;\n}\n\nclass Edge {\n  u: string;\n\n  v: string;\n}\n\ntype MenuType = \"vertex\" | \"edge\";\nclass MenuPos {\n  id?: string;\n\n  x: number;\n\n  y: number;\n}\n\n// 节点宽高\nexport const VERTEX_WIDTH = 180;\nexport const VERTEX_HEIGHT = 32;\n\nexport { Vertex, Edge, MenuPos };\n\n// 操作类型\nexport enum OperateType {\n  configuration = \"configuration\",\n  copy = \"copy\",\n  delete = \"delete\",\n  parallelism = \"parallelism\",\n  outputType = \"outputType\",\n  mainOutput = \"mainOutput\",\n  errorOutput = \"errorOutput\",\n  dataMethod = \"dataMethod\",\n  copyMethod = \"copyMethod\",\n  distribute = \"distribute\",\n  paste = \"paste\",\n  deleteLink = \"deleteLink\",\n  selectAll = \"selectAll\",\n  dragSelect = \"dragSelect\"\n}\n","/**\n * @file 画布侧边栏组件库面板\n * @author perkinJ\n */\n\nimport * as React from \"react\";\nimport * as _ from \"lodash\";\nimport classNames from \"classnames\";\nimport { Collapse } from \"antd\";\nimport {\n  ComponentType,\n  ComponentMap,\n  COMPONENT_CATEGORY,\n  Node\n} from \"../defines\";\nimport \"./NodePanel.scss\";\n\nconst { useState, useEffect } = React;\nconst Panel = Collapse.Panel;\n\ninterface NodePanelProps {\n  visible?: boolean;\n  onDrag?: (item: Node) => void;\n}\n\nexport default function NodePanel(props: NodePanelProps) {\n  const componnetList = Object.values(ComponentType);\n  const { onDrag, visible = false } = props;\n\n  // 默认取第一个\n  const [collapseKey, setCollapseKey] = useState<string[]>([componnetList[0]]);\n\n  const boxClass = classNames(\"nodePanel-box\", {\n    \"nodePanel-box-visible\": visible\n  });\n\n  /** 处理Collapse展开 */\n  const handleCollapseKey = (items: string[] | string) => {\n    setCollapseKey(items as string[]);\n  };\n\n  const handleDrag = (item: Node) => {\n    if (onDrag) {\n      onDrag(item);\n    }\n  };\n\n  return (\n    <div className=\"nodePanel\">\n      <div className={boxClass}>\n        <div className=\"nodePanel-box-collapse\">\n          <Collapse\n            activeKey={collapseKey}\n            onChange={handleCollapseKey}\n            bordered={true}\n            accordion\n          >\n            {componnetList.map(item => {\n              const total = COMPONENT_CATEGORY[item].length;\n              return (\n                <Panel\n                  key={item}\n                  header={\n                    <div className=\"collapse-title\">{`${\n                      ComponentMap[item]\n                    } (${total})`}</div>\n                  }\n                >\n                  <div className=\"components-box\">\n                    {COMPONENT_CATEGORY[item].map(child => {\n                      const boxItemClass = classNames(\"components-box-item\", {\n                        \"components-box-item-disabled no-drop\": child.disabled\n                      });\n                      return (\n                        <div\n                          className={boxItemClass}\n                          key={child.key}\n                          draggable={true}\n                          onDrag={handleDrag.bind(null, child)}\n                        >\n                          <div className=\"components-box-item-icon\">\n                            {child.icon}\n                          </div>\n                          {/* {child.name} */}\n                        </div>\n                      );\n                    })}\n                  </div>\n                </Panel>\n              );\n            })}\n          </Collapse>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/**\n * @file å¨å±å·¥å·ç±»\n * @author perkinJ\n */\n\n/**\n * å¨å±æä¸ä¸ªåç´ \n * @param element\n */\nfunction launchFullscreen(element: any) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  } else if (element.msRequestFullscreen) {\n    element.msRequestFullscreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  }\n}\n/**\n * éåºå¨å±\n */\nfunction exitFullscreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if ((document as any).webkitExitFullscreen) {\n    (document as any).webkitExitFullscreen();\n  }\n}\n\n/**\n * å¤æ­æ¯å¦å¤äºå¨å±ç¶æ\n */\nfunction isFull() {\n  const doc = document as any;\n  return doc.fullscreenElement || doc.webkitFullscreenElement;\n}\nexport { launchFullscreen, exitFullscreen, isFull };\n","/**\n * @file 画布操作导航\n * @author perkinJ\n */\n\nimport * as React from \"react\";\nimport { Icon } from \"antd\";\nimport classNames from \"classnames\";\nimport {\n  launchFullscreen,\n  exitFullscreen,\n  isFull\n} from \"../utils/FullsreenUtils\";\nimport { MIN_SCALE, MAX_SCALE } from \"../defines\";\nimport \"./Toolbar.scss\";\n\n/** 操作面板，支持全屏、缩放、自适应画布、格式化、显示比例 */\n\nexport type ToolbarType =\n  | \"fullscreen\"\n  | \"zoom\"\n  | \"adapt\"\n  | \"format\"\n  | \"ratio\"\n  | \"shear\"\n  | \"copy\"\n  | \"paste\"\n  | \"delete\";\n\nexport class ToolbarProps {\n  /** 适应画布 */\n  handleShowAll?: () => void;\n\n  /** 缩放 */\n  handleResizeTo?: (scale: number) => void;\n\n  /** 改变屏幕缩放大小 */\n  changeScreenScale?: (scale: number) => void;\n\n  /** 缩放大小 */\n  screenScale?: number;\n\n  /** 格式化布局 */\n  layout?: () => void;\n\n  onShear?: () => void;\n\n  onCopy?: () => void;\n\n  onPaste?: () => void;\n\n  onDelete?: () => void;\n\n  /** 处理全屏 */\n  // handleFullScreen?: () => void;\n  /** Toolbar选项 */\n  items?: ToolbarType[];\n\n  /**  */\n}\n\nconst Toolbar = React.forwardRef((props: ToolbarProps, ref: any) => {\n  const {\n    screenScale,\n    changeScreenScale,\n    handleResizeTo,\n    items,\n    onShear,\n    onCopy,\n    onPaste,\n    onDelete\n  } = props;\n  const scale = String(Math.round(screenScale));\n\n  /** 是否支持全屏 */\n\n  const isFullScreen = items.includes(\"fullscreen\");\n\n  /** 是否支持缩放 */\n  const isZoom = items.includes(\"zoom\");\n\n  /** 是否支持适应画布 */\n  const isAdapt = items.includes(\"adapt\");\n\n  /** 是否支持格式化 */\n  const isFormat = items.includes(\"format\");\n\n  /** 剪切 */\n  const isShear = items.includes(\"shear\");\n  /** 是否支持复制 */\n  const isCopy = items.includes(\"copy\");\n\n  const isPaste = items.includes(\"paste\");\n\n  const isDelete = items.includes(\"delete\");\n\n  /** 当前是否是全屏状态 */\n\n  const fullscreenStatus = isFull();\n\n  /** 缩放操作 */\n  const handleResize = (isLager?: boolean) => {\n    let value = screenScale;\n    if (isLager) {\n      value = screenScale + 10;\n      if (value > MAX_SCALE) {\n        value = MAX_SCALE;\n      }\n    } else {\n      value = screenScale - 10;\n      if (value < MIN_SCALE) {\n        value = MIN_SCALE;\n      }\n    }\n    handleResizeTo(value / 100);\n    changeScreenScale(value);\n  };\n\n  /** 处理全屏事件 */\n  const handleFullScreen = () => {\n    const isfull = isFull();\n    if (isfull) {\n      exitFullscreen();\n    } else {\n      launchFullscreen(ref.current);\n    }\n  };\n\n  // 渲染按钮\n  const renderButtons = () => {\n    const fullScreenClassName = classNames({\n      fullscreen: !fullscreenStatus,\n      \"fullscreen-exit\": fullscreenStatus\n    });\n\n    return (\n      <>\n        {isZoom && (\n          <>\n            <div className=\"toolbar-btn\">\n              <Icon type=\"zoom-in\" onClick={handleResize.bind(null, true)} />\n            </div>\n            <div className=\"toolbar-btn\">\n              <Icon type=\"zoom-out\" onClick={handleResize.bind(null, false)} />\n            </div>\n          </>\n        )}\n\n        {/* {isAdapt && (\n          <div className=\"adapt\">\n            <Tooltip placement=\"top\" title={I18N.DAG.DAGScreen.adapt}>\n              <Icon\n                type=\"dpicon icon-adapt\"\n                onClick={() => {\n                  props.handleShowAll();\n                }}\n              />\n            </Tooltip>\n          </div>\n        )}\n        {isFormat && (\n          <div className=\"format\">\n            <Tooltip placement=\"top\" title={I18N.PipelineCanvas.utils.format}>\n              <Icon\n                type=\"one-icon icon-geshihuabuju anticon-dpicon\"\n                onClick={() => {\n                  props.layout();\n                }}\n              />\n            </Tooltip>\n          </div>\n        )} */}\n        {isFullScreen && (\n          <div className=\"toolbar-btn\">\n            <Icon type={fullScreenClassName} onClick={handleFullScreen} />\n          </div>\n        )}\n\n        {isShear && (\n          <div className=\"toolbar-btn\">\n            <Icon type=\"scissor\" onClick={onShear} />\n          </div>\n        )}\n\n        {isCopy && (\n          <div className=\"toolbar-btn\">\n            <Icon type=\"copy\" onClick={onCopy} />\n          </div>\n        )}\n\n        {isPaste && (\n          <div className=\"toolbar-btn\">\n            <Icon type=\"snippets\" onClick={onPaste} />\n          </div>\n        )}\n        {isDelete && (\n          <div className=\"toolbar-btn\">\n            <Icon type=\"delete\" onClick={onDelete} />\n          </div>\n        )}\n      </>\n    );\n  };\n\n  return (\n    <div className=\"toolbar\">\n      <div className=\"toolbar-scale\">{scale}%</div>\n      <div className=\"toolbar-button\">{renderButtons()}</div>\n    </div>\n  );\n});\n\nexport default Toolbar;\n","/**\n * @file 通用边组件\n * @author perkinJ\n */\nimport * as React from \"react\";\nimport * as _ from \"lodash\";\nimport { CONNECTOR, StyleProps } from \"../utils/types\";\nimport \"./Edge.scss\";\n\nexport interface EdgeProps {\n  /** 元素id，唯一 */\n  id?: string;\n  /** 线条路径 */\n  path?: string;\n  /** 起始端的箭头, 为true时为默认的箭头效果，也可以是一个自定义箭头 */\n  startArrow?: boolean | React.SVGProps<SVGForeignObjectElement>;\n  /** 末尾端的箭头, 为true时为默认的箭头效果，也可以是一个自定义箭头 */\n  endArrow?: boolean | React.SVGProps<SVGForeignObjectElement>;\n  /** 边的击中范围\t */\n  lineAppendWidth?: number;\n  /** 元素样式 */\n  style?: StyleProps;\n  /** 自定义形状 */\n  object?: React.SVGProps<SVGForeignObjectElement>;\n  /** 鼠标点击事件 */\n  onClick?: (event: any) => void;\n  /** 右键事件 */\n  onContextMenu?: (event: any) => void;\n}\n\nexport default function Edge(props: EdgeProps) {\n  const {\n    id,\n    style,\n    onContextMenu,\n    onClick,\n    object,\n    lineAppendWidth,\n    path,\n    startArrow,\n    endArrow\n  } = props;\n  const { fill } = style;\n\n  let markerStart = \"\";\n  if (typeof startArrow === \"boolean\") {\n    if (startArrow) {\n      markerStart = \"url(#flow-startArrow)\";\n    }\n  } else if (React.isValidElement(startArrow)) {\n    markerStart = `url(#${(startArrow.props as any).id})`;\n  }\n\n  let endStart = \"\";\n  if (typeof endArrow === \"boolean\") {\n    if (startArrow) {\n      endStart = \"url(#flow-startArrow)\";\n    }\n  } else if (React.isValidElement(endArrow)) {\n    endStart = `url(#${(endArrow.props as any).id})`;\n  }\n\n  return (\n    <g key={`${id}${CONNECTOR}`} className=\"editor-link\">\n      <defs>\n        {React.isValidElement(startArrow) ? (\n          React.cloneElement(startArrow)\n        ) : (\n          <marker\n            id=\"flow-startArrow\"\n            markerWidth=\"10\"\n            markerHeight=\"10\"\n            refX=\"0\"\n            refY=\"2\"\n            orient=\"auto\"\n            markerUnits=\"strokeWidth\"\n          >\n            <path d=\"M0,0 L0,4 L4,2 z\" fill={fill} />\n          </marker>\n        )}\n      </defs>\n      <defs>\n        {React.isValidElement(endArrow) ? (\n          React.cloneElement(endArrow)\n        ) : (\n          <marker\n            id=\"flow-endArrow\"\n            markerWidth=\"10\"\n            markerHeight=\"10\"\n            refX=\"0\"\n            refY=\"2\"\n            orient=\"auto\"\n            markerUnits=\"strokeWidth\"\n          >\n            <path d=\"M0,0 L0,4 L4,2 z\" fill={fill} />\n          </marker>\n        )}\n      </defs>\n      <path\n        key={id}\n        className=\"editor-link-path\"\n        stroke={_.get(style, \"stroke\", \"\")}\n        strokeWidth={_.get(style, \"strokeWidth\", 0)}\n        d={path}\n        markerStart={markerStart}\n        markerEnd={endStart}\n      />\n      {/** 这里增加一个虚拟背景，增加连线的两边可点击区域，提高用户体验 */}\n      <path\n        key={`${id}-background`}\n        className=\"editor-link-path editor-link-path-background\"\n        style={{ strokeWidth: lineAppendWidth }}\n        d={path}\n        onContextMenu={onContextMenu}\n        onClick={onClick}\n      />\n      <g>{object}</g>\n    </g>\n  );\n}\n","/**\n * @file å¬å±ç±»åå®ä¹æä»¶\n * @author perkinJ\n */\n\n// è¿æ¥ç¬¦\nexport const CONNECTOR = '_';\n\n// ç¹åæ \nexport class Point {\n  x: number;\n\n  y: number;\n}\n\n// èç¹æ¯æçå½¢ç¶\nexport type Shape = 'rect' | 'circle' | 'ellipse' | 'poly';\n\n// æ¹å\nexport type Direction = 'left' | 'right';\n\n// åéå¨èç¹å±æ§\nexport class ShapeProps {\n  x: number;\n\n  y: number;\n\n  width: number;\n\n  height: number;\n\n  direction: Direction;\n}\n\n// éç¨svgåç´ æ ·å¼\nexport class StyleProps {\n  /** å¡«åè² */\n  fill?: string;\n\n  /** è¾¹æ¡å®½åº¦ */\n  strokeWidth?: number;\n\n  /** é¢è² */\n  stroke?: string;\n\n  /** èçº¿é´é */\n  strokeDasharray?: string;\n}\n","/**\n * @file 通用节点组件\n * @desc 与画布联动，用于计算画布位置、缩放等\n * @author perkinJ\n */\n\nimport * as React from \"react\";\nimport { useResize } from \"../hooks/useResize\";\nimport \"./Node.scss\";\n\nconst { useRef, useState, useEffect, useCallback } = React;\n\nclass NodeProps {\n  /** 节点id */\n  id: string;\n\n  /** 节点横坐标 */\n  x: number;\n\n  /** 节点纵坐标 */\n  y: number;\n\n  width: number;\n\n  height: number;\n\n  /** 点击节点 */\n  onClick?: (event) => void;\n\n  /** ContextMenu */\n  onContextMenu?: (position: any, event) => void;\n\n  /** 当前节点信息 */\n  node?: any;\n\n  /** 外部画布属性 */\n  currTrans?: any;\n\n  /** 是否被点击 */\n  isSelected: boolean;\n\n  children?: React.ReactNode;\n\n  /** 改变节点大小 */\n  onResize?: (width: number, height: number, x: number, y: number) => void;\n}\n\n/**\n * 获取元素相对于页面的绝对位置\n */\nexport function getOffset(domNode: any) {\n  let offsetTop = 0;\n  let offsetLeft = 0;\n  let targetDomNode = domNode;\n  while (targetDomNode !== window.document.body && targetDomNode != null) {\n    offsetLeft += targetDomNode.offsetLeft;\n    offsetTop += targetDomNode.offsetTop;\n    targetDomNode = targetDomNode.offsetParent;\n  }\n  return {\n    offsetTop,\n    offsetLeft\n  };\n}\n\nconst Node = React.forwardRef((props: NodeProps, ref: any) => {\n  const {\n    x,\n    y,\n    id,\n    onClick,\n    onContextMenu,\n    children,\n    currTrans,\n    width,\n    height,\n    isSelected,\n    onResize\n  } = props;\n\n  const [showSelector, setShowSelector] = useState(false);\n  const containerRef = useRef(null);\n\n  // 获取伸缩的大小\n  const {\n    width: resizeWidth,\n    height: resizeHeight,\n    x: resizeX,\n    y: resizeY\n  } = useResize(isSelected, {\n    width,\n    height,\n    x,\n    y\n  });\n\n  const handleContextMenu = (event: React.MouseEvent<any>) => {\n    event.preventDefault();\n    event.stopPropagation();\n    const container = containerRef.current.getBoundingClientRect();\n    container.id = id;\n    const { offsetTop, offsetLeft } = getOffset(container.current);\n\n    // The position ⟨x,y⟩ is transformed to ⟨xk + tx,yk + ty⟩\n    const screenX = event.clientX - offsetLeft;\n    const screenY = event.clientY - offsetTop;\n\n    const newX = (screenX - x) / currTrans.k;\n    const newY = (screenY - y) / currTrans.k;\n\n    const currentPos = {\n      left: newX,\n      top: newY\n    };\n\n    if (onContextMenu) {\n      onContextMenu(currentPos, event);\n    }\n  };\n\n  const NODE_SELECTOR = [\n    {\n      position: \"left\",\n      style: { left: \"-5px\", top: `${height / 2 - 5}px` }\n    },\n    {\n      position: \"right\",\n      style: { right: \"-5px\", top: `${height / 2 - 5}px` }\n    },\n    {\n      position: \"top\",\n      style: { left: `${width / 2 - 5}px`, top: \"-5px\" }\n    },\n    {\n      position: \"bottom\",\n      style: { left: `${width / 2 - 5}px`, top: `${height - 5}px` }\n    }\n  ];\n\n  const RESIZE_SELECTOR = [\n    \"top-left\",\n    \"top-right\",\n    \"bottom-left\",\n    \"bottom-right\"\n  ];\n\n  // 伸缩器\n  const renderResize = (\n    <div className=\"resizable\">\n      <div className=\"resizers\">\n        {RESIZE_SELECTOR.map(item => (\n          <div key={item} className={`resizer ${item}`} data-type=\"resize\" />\n        ))}\n      </div>\n    </div>\n  );\n\n  // 连线节点选择器\n  const renderNodeSelector = (\n    <div className=\"editor-node-selector\" style={{ width, height }}>\n      {NODE_SELECTOR.map(item => {\n        return (\n          <a\n            data-type=\"edge\"\n            data-position={item.position}\n            key={item.position}\n            href=\"javascript:void(0)\"\n            className={`node-selector`}\n            style={item.style}\n          />\n        );\n      })}\n    </div>\n  );\n\n  useEffect(() => {\n    onResize(resizeWidth, resizeHeight, resizeX, resizeY);\n  }, [resizeWidth, resizeHeight, resizeX, resizeY]);\n\n  return (\n    <div\n      className=\"editor-node\"\n      style={{\n        left: x,\n        top: y,\n        width,\n        height\n      }}\n      ref={ref}\n      onClick={onClick}\n      onMouseEnter={() => setShowSelector(true)}\n      onMouseLeave={() => setShowSelector(false)}\n      onContextMenu={handleContextMenu}\n    >\n      {(isSelected || showSelector) && renderNodeSelector}\n      {isSelected && renderResize}\n      {React.cloneElement(children as React.ReactElement<any>, {\n        ref: containerRef\n      })}\n    </div>\n  );\n});\n\nexport default Node;\n","import { useState, useEffect } from 'react';\n\nclass NodeInfo {\n  width: number;\n  height: number;\n  x: number;\n  y: number;\n}\n\nconst useResize = (isResize: boolean, { width, height, x, y }: NodeInfo): NodeInfo => {\n  const [nodeWidth, setNodeWidth] = useState(width);\n  const [nodeHeight, setNodeHeight] = useState(height);\n  const [nodeLeft, setNodeLeft] = useState(x);\n  const [nodeTop, setNodeTop] = useState(y);\n\n  useEffect(() => {\n    setNodeLeft(x);\n    setNodeTop(y);\n  }, [x, y]);\n\n  useEffect(() => {\n    const resizers = document.querySelectorAll('.resizer');\n    const element = document.querySelector('.resizable');\n    const minSize = 20;\n    // åå§é«åº¦å®½åº¦\n    let originWidth = 0;\n    let originHeight = 0;\n    // èç¹çåå§ä½ç½®\n    let originX = 0;\n    let originY = 0;\n    // é¼ æ ææ½çåå§ä½ç½®\n    let originMouseX = 0;\n    let originMouseY = 0;\n    if (isResize) {\n      for (let i = 0; i < resizers.length; i++) {\n        const currentResizer = resizers[i];\n        currentResizer.addEventListener('mousedown', e => {\n          e.preventDefault();\n\n          originWidth = parseFloat(\n            getComputedStyle(element, null)\n              .getPropertyValue('width')\n              .replace('px', '')\n          );\n          originHeight = parseFloat(\n            getComputedStyle(element, null)\n              .getPropertyValue('height')\n              .replace('px', '')\n          );\n          originX = element.getBoundingClientRect().left;\n          originY = element.getBoundingClientRect().top;\n          originMouseX = (e as any).pageX;\n          originMouseY = (e as any).pageY;\n\n          // åæ´type\n          window.addEventListener('mousemove', resize);\n          window.addEventListener('mouseup', stopResize);\n        });\n        const resize = e => {\n          let newWidth = 0;\n          let newHeight = 0;\n          let newLeft = 0;\n\n          if (currentResizer.classList.contains('bottom-right')) {\n            newWidth = originWidth + (e.pageX - originMouseX);\n            newHeight = originHeight + (e.pageY - originMouseY);\n            if (newWidth > minSize) {\n              setNodeWidth(newWidth);\n            }\n            if (newHeight > minSize) {\n              setNodeHeight(newHeight);\n            }\n          } else if (currentResizer.classList.contains('bottom-left')) {\n            newWidth = originWidth - (e.pageX - originMouseX);\n            newHeight = originHeight + (e.pageY - originMouseY);\n            if (newWidth > minSize) {\n              setNodeWidth(newWidth);\n              setNodeLeft(nodeLeft + (e.pageX - originMouseX));\n            }\n            if (newHeight > minSize) {\n              setNodeHeight(newHeight);\n            }\n          } else if (currentResizer.classList.contains('top-right')) {\n            newWidth = originWidth + (e.pageX - originMouseX);\n            newHeight = originHeight - (e.pageY - originMouseY);\n            if (newWidth > minSize) {\n              setNodeWidth(newWidth);\n            }\n            if (newHeight > minSize) {\n              setNodeHeight(newHeight);\n              setNodeTop(nodeTop + (e.pageY - originMouseY));\n            }\n          } else {\n            newWidth = originWidth - (e.pageX - originMouseX);\n            newHeight = originHeight - (e.pageY - originMouseY);\n            if (width > minSize) {\n              setNodeWidth(newWidth);\n              setNodeLeft(nodeLeft + (e.pageX - originMouseX));\n            }\n            if (height > minSize) {\n              setNodeHeight(newHeight);\n              setNodeTop(nodeTop + (e.pageY - originMouseY));\n            }\n          }\n        };\n\n        const stopResize = () => {\n          window.removeEventListener('mousemove', resize);\n        };\n      }\n    }\n  }, [isResize, nodeWidth, nodeHeight, setNodeHeight, setNodeWidth, nodeTop, nodeLeft, setNodeTop, setNodeLeft]);\n\n  return {\n    width: nodeWidth,\n    height: nodeHeight,\n    x: nodeLeft,\n    y: nodeTop\n  };\n};\n\nexport { useResize };\n","/**\n * @file ç»å¸åºå±ä½ç½®è®¡ç®ç¸å³æ¹æ³\n * @author perkinJ\n */\n\nimport * as _ from 'lodash';\nimport { Point, Shape, ShapeProps } from './types';\n/**\n * ä¸¤ç¹é´ç´çº¿è·ç¦»\n * @param sourcePoint\n * @param targetPoint\n */\nexport function distance(sourcePoint: Point, targetPoint: Point) {\n  const x = sourcePoint.x - targetPoint.x;\n  const y = sourcePoint.y - targetPoint.y;\n  return Math.sqrt(x * x + y * y);\n}\n\n/**\n * ä¸¤ç¹é´æ²çº¿\n * @param sourcePoint\n * @param targetPoint\n */\nexport const quadratic = (sourcePoint: Point, targetPoint: Point): string => {\n  const centerX = (sourcePoint.x + targetPoint.x) / 2;\n  const centerY = (sourcePoint.y + targetPoint.y) / 2;\n  let tolerance = 30;\n\n  const sub = targetPoint.y - sourcePoint.y;\n\n  if (sub > -100 && sub < 100) {\n    tolerance = Math.max(Math.abs(targetPoint.y - sourcePoint.y) / 2, 20);\n  }\n\n  return [\n    'M',\n    sourcePoint.x,\n    sourcePoint.y,\n    'Q',\n    /** æ¨ªåä¸ç«åæåºå« */\n    sourcePoint.x + tolerance,\n    sourcePoint.y,\n    centerX,\n    centerY,\n    'T',\n    targetPoint.x - 6,\n    targetPoint.y - 2\n  ].join(' ');\n};\n\n/**\n * è®¡ç®è¿çº¿çä½ç½®\n * @param node ä¸çº¿ç¸è¿çèç¹\n */\nexport function calcLinkPosition(node, position) {\n  let x = node.x + node.width;\n  let y = node.y + node.height / 2;\n  if (position === 'left') {\n    x = node.x;\n    y = node.y + node.height / 2;\n  } else if (position === 'right') {\n    x = node.x + node.width;\n    y = node.y + node.height / 2;\n  } else if (position === 'top') {\n    x = node.x + node.width / 2;\n    y = node.y;\n  } else if (position === 'bottom') {\n    x = node.x + node.width / 2;\n    y = node.y + node.height;\n  }\n\n  return {\n    x,\n    y\n  };\n}\n\n/**\n * è·ååç´ ç¸å¯¹äºé¡µé¢çç»å¯¹ä½ç½®\n */\nexport function getOffset(domNode: any) {\n  let offsetTop = 0;\n  let offsetLeft = 0;\n  let targetDomNode = domNode;\n  while (targetDomNode !== window.document.body && targetDomNode != null) {\n    offsetLeft += targetDomNode.offsetLeft;\n    offsetTop += targetDomNode.offsetTop;\n    targetDomNode = targetDomNode.offsetParent;\n  }\n  return {\n    offsetTop,\n    offsetLeft\n  };\n}\n\n/** è·ååç´ å¨é¡µé¢ä¸å æ®çé«åº¦ */\nexport function getHeight(dom: HTMLElement) {\n  if (!dom) {\n    return 0;\n  }\n  const style = window.getComputedStyle(dom);\n  return (\n    dom.getBoundingClientRect().height +\n    Number(style.marginTop.match(/\\d+/g)) +\n    Number(style.marginBottom.match(/\\d+/g))\n  );\n}\n\n// è·ååç´ å¨é¡µé¢ä¸å æ®çå®½åº¦\nexport function getWidth(dom: HTMLElement) {\n  if (!dom) {\n    return 0;\n  }\n  const style = window.getComputedStyle(dom);\n  return (\n    dom.getBoundingClientRect().width + Number(style.marginLeft.match(/\\d+/g)) + Number(style.marginRight.match(/\\d+/g))\n  );\n}\n\n// å¤çä¸åå¾å½¢çpathæ°æ®\nexport function handlePathData(shape: Shape, shapeProps: ShapeProps): string {\n  const { x, y, width, height, direction } = shapeProps;\n  let pathData = '';\n  if (shape === 'rect') {\n    pathData = `M${x} ${y} h ${width} v ${height} h -${width} Z`;\n    if (direction === 'right') {\n      pathData = `M${x} ${y} h -${width} v -${height} h ${width} Z`;\n    }\n  }\n  return pathData;\n}\n","/**\n * @file åéå¨é»è¾å¤çï¼ä¸è§å¾åç¦»\n * @author perkinJ\n */\n\nimport * as React from 'react';\n\nimport { handlePathData } from './calc';\nimport { Shape, ShapeProps } from './types';\n\nconst { useCallback, useEffect, useState, useRef } = React;\n\nconst initSelectorProps = {\n  x: 0,\n  y: 0,\n  width: 0,\n  height: 0,\n  direction: 'left',\n} as ShapeProps;\n\nexport default function useDragSelect(dragSelectContainerRef: any, shape: Shape) {\n  const [shapeProps, setShapeProps] = useState<ShapeProps>(initSelectorProps);\n\n  const [pathData, setPathData] = useState('');\n\n  // è®°å½mousedownäºä»¶çX,Yä½ç½®ï¼\n  const mousdownX = useRef(0);\n  const mousdownY = useRef(0);\n\n  const handleMouseMove = useCallback(\n    event => {\n      const newX = event.layerX;\n      const newY = event.layerY;\n      const newWidth = Math.abs(newX - mousdownX.current);\n      const newHeight = Math.abs(newY - mousdownY.current);\n\n      const diffX = newX - mousdownX.current;\n\n      const newShapeProps = {\n        x: mousdownX.current,\n        y: mousdownY.current,\n        width: newWidth,\n        height: newHeight,\n        direction: diffX < 0 ? 'right' : 'left',\n      } as ShapeProps;\n\n      const path = handlePathData(shape, newShapeProps);\n      setPathData(path);\n      setShapeProps(newShapeProps);\n    },\n    [setShapeProps, shape],\n  );\n\n  const handleMouseUp = useCallback(\n    event => {\n      event.stopPropagation();\n\n      // æ¸ç©ºè·¯å¾\n      setPathData('');\n\n      // æ¸ç©ºåæ¬¡ç¹å»æ°æ®\n      mousdownX.current = 0;\n      mousdownY.current = 0;\n      dragSelectContainerRef.current.removeEventListener('mousemove', handleMouseMove);\n    },\n    [dragSelectContainerRef, handleMouseMove],\n  );\n\n  const handleMouseDown = useCallback(\n    event => {\n      event.stopPropagation();\n\n      mousdownX.current = event.layerX;\n      mousdownY.current = event.layerY;\n\n      dragSelectContainerRef.current.addEventListener('mousemove', handleMouseMove);\n      dragSelectContainerRef.current.addEventListener('mouseup', handleMouseUp);\n    },\n    [dragSelectContainerRef, handleMouseMove, handleMouseUp],\n  );\n\n  useEffect(() => {\n    const drag = dragSelectContainerRef.current;\n    drag.addEventListener('mousedown', handleMouseDown);\n    return () => {\n      drag.removeEventListener('mousedown', handleMouseDown);\n    };\n  }, [dragSelectContainerRef, handleMouseDown]);\n\n  // è¿åéæ©å¨åæ ä½ç½®ä»¥åçæçpathæ°æ®\n  return { shapeProps, pathData };\n}\n\nexport { ShapeProps };\n","/**\n * @file 圈选器组件\n * @author perkinJ\n */\n\nimport * as React from \"react\";\nimport classNames from \"classnames\";\nimport * as _ from \"lodash\";\nimport useDragSelect, { ShapeProps } from \"../utils/useDragSelect\";\nimport { StyleProps } from \"../utils/types\";\nimport \"./DragSelector.scss\";\n\nconst { useRef, useCallback, useMemo } = React;\n\nclass DragSeletorProps {\n  /** 长度 */\n  width: number;\n\n  /** 高度 */\n  height: number;\n\n  /** 蒙层的颜色 */\n  overlayColor?: string;\n\n  /** 选择器的样式 */\n  selectorStyle?: StyleProps;\n\n  /** 是否展示 */\n  visible: boolean;\n\n  /** 关闭 */\n  onClose?: (selectProps: ShapeProps) => void;\n}\n\nexport default function DragSeletor(props: DragSeletorProps) {\n  const {\n    width,\n    height,\n    overlayColor,\n    selectorStyle,\n    visible,\n    onClose\n  } = props;\n  const dragSelectContainerRef = useRef(null);\n\n  const { shapeProps, pathData } = useDragSelect(\n    dragSelectContainerRef,\n    \"rect\"\n  );\n\n  const handleClick = useCallback(\n    event => {\n      event.stopPropagation();\n      event.preventDefault();\n      if (onClose) {\n        onClose(shapeProps);\n      }\n    },\n    [onClose, shapeProps]\n  );\n\n  return useMemo(() => {\n    const classes = classNames(\"drag-select-container\", {\n      \"drag-select-hidden\": !visible\n    });\n\n    return (\n      <svg\n        ref={dragSelectContainerRef}\n        className={classes}\n        width={width}\n        height={height}\n        style={{ background: overlayColor }}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        onDrag={event => {\n          event.preventDefault();\n        }}\n        onClick={handleClick}\n      >\n        <g>\n          {/** 可支持多个图形，矩形，圆形，自定义路径等 */}\n          <path d={pathData} style={{ ...selectorStyle }} />\n        </g>\n      </svg>\n    );\n  }, [\n    overlayColor,\n    handleClick,\n    width,\n    height,\n    selectorStyle,\n    visible,\n    pathData\n  ]);\n}\n\nexport { ShapeProps };\n","import * as React from 'react';\n\nimport './ContextMenu.scss';\n\nclass ContextMenuProps {\n  id?: string;\n  visible: boolean;\n  left: number;\n  top: number;\n  // onHide: () => void;\n  children: any;\n}\nconst ContextMenu: React.FC<ContextMenuProps> = (props: ContextMenuProps) => {\n  const { id, visible, left, top, children } = props;\n  return (\n    <div\n      id={id ? `context-menu-${id}` : 'context-menu'}\n      style={{ display: visible ? 'block' : 'none', left, top }}\n      className=\"contextMenu-layer\">\n      <div className=\"contextMenu\">{children}</div>\n    </div>\n  );\n};\n\nexport { ContextMenu };\n","import { MutableRefObject, useRef, useEffect, useCallback, useMemo } from 'react';\n\n// é¼ æ ç¹å»äºä»¶ï¼click ä¸ä¼çå¬å³é®\nconst defaultEvent = 'click';\n\ntype RefType = HTMLElement | (() => HTMLElement | null) | null;\n\nexport function useClickAway<T extends HTMLElement = HTMLDivElement>(\n  onClickAway: (event: KeyboardEvent) => void,\n  dom?: RefType,\n  eventName: string = defaultEvent,\n): MutableRefObject<T> {\n  const element = useRef<T>();\n\n  const handler = useCallback(\n    event => {\n      const targetElement = typeof dom === 'function' ? dom() : dom;\n      const el = targetElement || element.current;\n      if (!el || el.contains(event.target)) {\n        return;\n      }\n\n      onClickAway(event);\n    },\n    [element.current, onClickAway, dom],\n  );\n\n  useEffect(() => {\n    document.addEventListener(eventName, handler);\n\n    return () => {\n      document.removeEventListener(eventName, handler);\n    };\n  }, [eventName, handler]);\n\n  return element as MutableRefObject<T>;\n}","/**\n * @file 业务组件，基于Node的管道组件卡片\n * @author perkinJ\n */\n\nimport * as React from \"react\";\nimport classNames from \"classnames\";\nimport { Menu } from \"antd\";\nimport { Node as NodeContainer } from \"./components\";\nimport { ContextMenu } from \"./ContextMenu\";\nimport { Node, OperateType } from \"./defines\";\nimport { useClickAway } from \"./hooks/useClickAway\";\nimport \"./EditorNode.scss\";\n\nconst { useState, useRef, useMemo, useCallback } = React;\n\nclass EditorNodeProps {\n  /** 唯一id，用于Contextmenu展示 */\n  id?: string;\n\n  /** 节点信息 */\n  currentNode: Node;\n\n  /** 选择菜单栏 */\n  onSelect?: (currentNode: Node, key: any) => void;\n\n  /** 右键组件 */\n  onContextMenu?: (event: React.MouseEvent<HTMLLIElement>) => void;\n\n  /** 是否属性设置完全 */\n  isCompleted?: boolean;\n\n  /** 是否有错误数据 */\n  hasError?: boolean;\n\n  /** 是否被点击 */\n  isSelected?: boolean;\n\n  /** 是否被拖拽 */\n  isDragged?: boolean;\n\n  /** 点击卡片 */\n  onClick?: (currentNode: Node, event: any) => void;\n\n  /** 是否可交互，区分展示型和交互型 */\n  interactive?: boolean;\n\n  /** 外部容器的缩放情况 */\n  currTrans?: any;\n\n  /** 显示选择器 */\n  showSelector?: boolean;\n\n  /** Node容器的ref */\n  nodeRef: any;\n\n  /** 改变节点大小 */\n  onResize?: (width: number, height: number, x: number, y: number) => void;\n}\n\n/**\n * 获取元素相对于页面的绝对位置\n */\nexport function getOffset(domNode: any) {\n  let offsetTop = 0;\n  let offsetLeft = 0;\n  let targetDomNode = domNode;\n  while (targetDomNode !== window.document.body && targetDomNode != null) {\n    offsetLeft += targetDomNode.offsetLeft;\n    offsetTop += targetDomNode.offsetTop;\n    targetDomNode = targetDomNode.offsetParent;\n  }\n  return {\n    offsetTop,\n    offsetLeft\n  };\n}\n\nexport function EditorNode(props: EditorNodeProps) {\n  const {\n    currentNode,\n    onSelect,\n    hasError,\n    isSelected,\n    isDragged,\n    onClick,\n    interactive = true,\n    currTrans,\n    nodeRef,\n    onResize,\n    showSelector,\n    id\n  } = props;\n  // 组件内状态，与业务无关\n  const [menuShow, setMenuShow] = useState(false);\n  const [menuPos, setMenuPos] = useState({ left: 0, top: 0 });\n\n  useClickAway(\n    () => {\n      setMenuShow(false);\n    },\n    () => document.querySelector(\".editorNode-box-menu\"),\n    \"contextmenu\"\n  );\n\n  const menuRef = useClickAway(() => {\n    setMenuShow(false);\n  });\n\n  const editorNodeRef = useRef(null);\n\n  // const [pos, setPos] = useState(initPos);\n  // 边框颜色\n  let borderColor = \"\";\n  if (isSelected) {\n    borderColor = `selected ${currentNode.key}-clicked ${\n      currentNode.key\n    }-border`;\n  } else {\n    borderColor = `${currentNode.key}-border`;\n  }\n\n  // 是否是圆形，TODO: 后续放开多边形\n  const isCircle = currentNode.key === \"circle\";\n\n  const borderClass = classNames(\n    \"editorNode-box\",\n    borderColor,\n    {\n      dragging: isDragged\n    },\n    { \"editorNode-circle\": isCircle }\n  );\n\n  const menuList = [\n    {\n      name: \"删除\",\n      key: OperateType.delete,\n      disabled: false\n    }\n  ];\n\n  const onContextMenu = (\n    position: { left: number; top: number },\n    event: React.MouseEvent<any>\n  ) => {\n    event.stopPropagation();\n    event.preventDefault();\n    // 根据业务场景处理菜单的位置\n    const newPosition = {\n      left: position.left,\n      top: position.top\n    };\n    setMenuPos(newPosition);\n    setMenuShow(true);\n    if (props.onContextMenu) {\n      props.onContextMenu(event);\n    }\n  };\n\n  /** 点击菜单项 */\n  const handleClickMenu = ({ key }) => {\n    onSelect(currentNode, key);\n    setMenuShow(false);\n  };\n\n  /** 点击组件 */\n  const handleClickNode = useCallback(\n    event => {\n      if (interactive && onClick) {\n        onClick(currentNode, event);\n      }\n    },\n    [interactive, onClick, currentNode]\n  );\n\n  return (\n    <NodeContainer\n      id={currentNode.id}\n      x={currentNode.x}\n      y={currentNode.y}\n      width={currentNode.width}\n      height={currentNode.height}\n      currTrans={currTrans}\n      ref={nodeRef}\n      isSelected={isSelected}\n      onClick={handleClickNode}\n      onResize={onResize}\n      onContextMenu={interactive ? onContextMenu : null}\n    >\n      <div className=\"editorNode\" ref={editorNodeRef}>\n        <div className={borderClass}>\n          <div className=\"editorNode-box-property\">\n            <div className=\"editorNode-name\">{currentNode.name}</div>\n          </div>\n          <div className=\"editorNode-box-menu\" ref={menuRef}>\n            <ContextMenu\n              id={currentNode.id}\n              visible={menuShow}\n              left={menuPos.left}\n              top={menuPos.top}\n            >\n              <Menu\n                getPopupContainer={(triggerNode: any) => triggerNode.parentNode}\n              >\n                {menuList.map(child => {\n                  return (\n                    <Menu.Item key={child.key} onClick={handleClickMenu}>\n                      {child.name}\n                    </Menu.Item>\n                  );\n                })}\n              </Menu>\n            </ContextMenu>\n          </div>\n        </div>\n      </div>\n    </NodeContainer>\n  );\n}\n","/**\n * @file 通用边组件\n * @author perkinJ\n */\n\nimport * as React from \"react\";\nimport * as _ from \"lodash\";\nimport Edge from \"./components/Edge\";\nimport { quadratic, calcLinkPosition } from \"./utils/calc\";\nimport { Node, Link, ACTIVE, LINK, UNLINK } from \"./defines\";\nimport \"./EditorEdges.scss\";\n\nclass EditorEdgesProps {\n  /** 唯一id */\n  id?: string;\n\n  /** 边 */\n  links: Link[];\n\n  /** 节点 */\n  nodes: Node[];\n\n  /** 被点击的连线 */\n  selectedLinks?: string[];\n\n  /** 选择某条线 */\n  onSelectLink?: (\n    key: string,\n    event: React.MouseEvent<SVGPathElement, MouseEvent>\n  ) => void;\n\n  /** 右键某条线 */\n  onContextMenu?: (\n    key: string,\n    event: React.MouseEvent<SVGPathElement, MouseEvent>\n  ) => void;\n\n  /** 是否连线 */\n  isDraggingLink?: boolean;\n\n  /** 拖拽连线属性 */\n  dragLink?: {\n    /** 源起节点id */\n    originId: string;\n    /** 源起节点 */\n    originX: number;\n    originY: number;\n    /** 鼠标移动节点 */\n    x: number;\n    y: number;\n  };\n\n  /** 是否可交互 */\n  interactive?: boolean;\n}\n\nexport function EditorEdges(props: EditorEdgesProps) {\n  const {\n    links,\n    nodes,\n    selectedLinks,\n    onSelectLink,\n    onContextMenu,\n    isDraggingLink,\n    dragLink,\n    interactive = true\n  } = props;\n  const edgesPath = links.map(link => {\n    const { source, target, id, sourcePos, targetPos } = link;\n    const uNode = _.find(nodes, vertex => {\n      return vertex.id === source;\n    });\n    const vNode = _.find(nodes, vertex => {\n      return vertex.id === target;\n    });\n    const { x: sourceX, y: sourceY } = calcLinkPosition(uNode, sourcePos);\n    const { x: targetX, y: targetY } = calcLinkPosition(vNode, targetPos);\n\n    // 自定义路径\n    const pathData = quadratic(\n      {\n        x: sourceX,\n        y: sourceY\n      },\n      {\n        x: targetX,\n        y: targetY\n      }\n    );\n\n    // 连线的中点\n    // const centerX = (uNode.x + NODE_WIDTH + vNode.x) / 2;\n    // const centerY = (uNode.y + NODE_HEIGHT + vNode.y) / 2;\n\n    const isActive = selectedLinks ? selectedLinks.includes(id) : false;\n    const fill = isActive ? ACTIVE : LINK;\n\n    const style = {\n      fill,\n      stroke: fill,\n      strokeWidth: 2\n    };\n\n    return (\n      <Edge\n        key={id}\n        id={id}\n        path={pathData}\n        lineAppendWidth={15}\n        style={style}\n        onContextMenu={interactive ? onContextMenu.bind(null, id) : null}\n        onClick={interactive ? onSelectLink.bind(null, id) : null}\n        endArrow={\n          <marker\n            id={`${id}-endArrow`}\n            markerWidth=\"10\"\n            markerHeight=\"10\"\n            refX=\"0\"\n            refY=\"2\"\n            orient=\"auto\"\n            markerUnits=\"strokeWidth\"\n          >\n            <path d=\"M0,0 L0,4 L4,2 z\" fill={fill} />\n          </marker>\n        }\n        // object={\n        //   (type || _.isBoolean(sendTo)) &&\n        //   !iconDisabled && (\n        //     <foreignObject\n        //       width={LINKICON_WIDTH}\n        //       height=\"60\"\n        //       x={centerX - LINKICON_WIDTH / 2}\n        //       y={centerY - LINKICON_HEIGHT / 2}\n        //     >\n        //       <div className=\"link-icon\">\n\n        //       </div>\n        //     </foreignObject>\n        //   )\n        // }\n      />\n    );\n  });\n\n  const renderDraggingLink = () => {\n    if (isDraggingLink) {\n      const { x, y, originX, originY } = dragLink;\n      const pathData = quadratic(\n        {\n          x: originX,\n          y: originY\n        },\n        {\n          x,\n          y\n        }\n      );\n\n      return (\n        <Edge\n          path={pathData}\n          endArrow={\n            <marker\n              id={`${UNLINK}-endArrow`}\n              markerWidth=\"10\"\n              markerHeight=\"10\"\n              refX=\"0\"\n              refY=\"2\"\n              orient=\"auto\"\n              markerUnits=\"strokeWidth\"\n            >\n              <path d=\"M0,0 L0,4 L4,2 z\" fill={UNLINK} />\n            </marker>\n          }\n          style={{\n            fill: UNLINK,\n            stroke: UNLINK,\n            strokeWidth: 2\n          }}\n        />\n      );\n    }\n\n    return null;\n  };\n\n  return (\n    <svg className=\"editor-view-svg\">\n      {links && edgesPath}\n      {interactive && renderDraggingLink()}\n    </svg>\n  );\n}\n","/**\n * @file èç¹ï¼è¾¹æç´¢æ¹æ³\n * @author perkinJ\n */\n\nimport * as _ from 'lodash';\nimport { Node, Link } from '../defines';\nimport { distance } from './calc';\nimport { Point } from './types';\n/**\n * æ¥æ¾åä¸ªä¸æ¸¸ç»ä»¶\n */\nexport const findUpstreamNode = (id: string, nodes: Node[], links: Link[]) => {\n  const selectedLinks = _.find(links, item => item.target === id);\n  if (selectedLinks) {\n    const upstreamComponent = _.find(nodes, item => item.id === selectedLinks.source, null);\n    return upstreamComponent;\n  }\n};\n\n/**\n * æ¥æ¾åä¸ªä¸æ¸¸ç»ä»¶\n */\nexport const findDownstreamNode = (id: string, nodes: Node[], links: Link[]) => {\n  const selectedLinks = _.find(links, item => item.source === id);\n  if (selectedLinks) {\n    const downstreamComponent = _.find(nodes, item => item.id === selectedLinks.target, null);\n    return downstreamComponent;\n  }\n};\n\n/** æç´¢å½åç»ä»¶çææçä¸æ¸¸ç»ä»¶ */\nexport const findAllDownstreamNodes = (id: string, nodes: Node[], links: Link[]) => {\n  const selectedLinks = _.filter(links, item => item.source === id);\n  if (Array.isArray(selectedLinks) && selectedLinks.length > 0) {\n    const downstreamComponent = selectedLinks.map(link => _.find(nodes, item => item.id === link.target));\n    return downstreamComponent;\n  }\n  return [];\n};\n\n/** æç´¢ææçä¸æ¸¸ç»ä»¶ */\nexport const findAllUpstreamNodes = (id: string, nodes: Node[], links: Link[]) => {\n  const selectedLinks = _.filter(links, item => item.target === id);\n  if (selectedLinks) {\n    const upstreamComponent = _.filter(nodes, item => item.id === selectedLinks[0].source);\n    return upstreamComponent;\n  }\n  return [];\n};\n\n/** æç´¢å½åç»ä»¶çææä¸æ¸¸è¿çº¿ */\nexport const findAllUptreamLinks = (id: string, links: Link[]) => {\n  const newLinks = _.filter(links, item => item.target === id);\n  return newLinks;\n};\n\n/** æç´¢å½åç»ä»¶çææä¸æ¸¸è¿çº¿ */\nexport const findAllDownstreamLinks = (id: string, links: Link[]) => {\n  const newLinks = _.filter(links, item => item.source === id);\n  return newLinks;\n};\n\n/**\n * @desc æ¥æ¾é è¿æä¸ªç¹æè¿çèç¹ï¼ç¨äºè¿çº¿\n * @param point ç¹çåæ \n * @param nodes èç¹\n * @param range æå¤§èå´\n */\nexport const findNearbyNode = (point: Point, nodes: Node[], range: number) => {\n  let targetNode: Node = null;\n  let minDis = Infinity;\n  let targetPos = '';\n\n  nodes.forEach(v => {\n    // 1. æ¯è¾4ä¸ªç¹ç¦»åå§ç¹æè¿çç¹\n    let minDistance = Infinity;\n    ['left', 'right', 'top', 'bottom'].forEach(item => {\n      let targetX;\n      let targetY;\n      if (item === 'left') {\n        targetX = v.x;\n        targetY = v.y + v.height / 2;\n      } else if (item === 'right') {\n        targetX = v.x + v.width;\n        targetY = v.y + v.height / 2;\n      } else if (item === 'top') {\n        targetX = v.x + v.width / 2;\n        targetY = v.y;\n      } else if (item === 'bottom') {\n        targetX = v.x + v.width / 2;\n        targetY = v.y + v.height;\n      }\n\n      minDistance = distance(\n        {\n          x: point.x,\n          y: point.y\n        },\n        {\n          x: targetX,\n          y: targetY\n        }\n      );\n\n      if (minDis > minDistance) {\n        minDis = minDistance;\n        targetNode = v;\n        targetPos = item;\n      }\n    });\n  });\n\n  if (minDis <= range) {\n    return { targetNode, targetPos };\n  }\n  return null;\n};\n","/**\n * @file demo公共方法\n * @author perkinJ\n */\n\n/**\n * 全屏某一个元素\n * @param element\n */\nfunction launchFullscreen(element: any) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  } else if (element.msRequestFullscreen) {\n    element.msRequestFullscreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  }\n}\n/**\n * 退出全屏\n */\nfunction exitFullscreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if ((document as any).webkitExitFullscreen) {\n    (document as any).webkitExitFullscreen();\n  }\n}\n\n/**\n * 判断是否处于全屏状态\n */\nfunction isFull() {\n  const doc = document as any;\n  return doc.fullscreenElement || doc.webkitFullscreenElement;\n}\n\n/**\n * 获取元素相对于页面的绝对位置\n */\nfunction getOffset(domNode: any) {\n  let offsetTop = 0;\n  let offsetLeft = 0;\n  let targetDomNode = domNode;\n  while (targetDomNode !== window.document.body && targetDomNode != null) {\n    offsetLeft = offsetLeft + targetDomNode.offsetLeft;\n    offsetTop = offsetTop + targetDomNode.offsetTop;\n    targetDomNode = targetDomNode.offsetParent;\n  }\n  return {\n    offsetTop,\n    offsetLeft\n  };\n}\n\nexport { launchFullscreen, exitFullscreen, isFull, getOffset };\n","/**\n * @file 处理画布内的操作\n */\n\nimport * as React from \"react\";\nimport * as _ from \"lodash\";\nimport * as uuid from \"uuid\";\nimport { ReScreen, Utils } from \"regraph-next\";\nimport { ZoomTransform, zoomIdentity } from \"d3-zoom\";\nimport { Menu } from \"antd\";\nimport { EditorNode } from \"./EditorNode\";\nimport { EditorEdges } from \"./EditorEdges\";\nimport { ContextMenu } from \"./ContextMenu\";\nimport {\n  MenuPos,\n  CONNECTOR,\n  OperateType,\n  Link,\n  Node,\n  NODE_WIDTH,\n  NODE_HEIGHT,\n  LINK_AREA\n} from \"./defines\";\nimport {\n  findUpstreamNode,\n  findAllUpstreamNodes,\n  findDownstreamNode,\n  findAllDownstreamNodes,\n  findAllDownstreamLinks,\n  findNearbyNode\n} from \"./utils/find\";\nimport { calcLinkPosition } from \"./utils/calc\";\nimport { exitFullscreen, launchFullscreen, isFull, getOffset } from \"../utils\";\n\nconst { Point } = Utils;\n\nclass CanvasContentProps {\n  ref: any;\n  nodes: Node[];\n  links: Link[];\n  setNodes: (nodes: Node[]) => void;\n  setLinks: (links: Link[]) => void;\n  selectedLinks: string[];\n  setSelectedLinks: (links: string[]) => void;\n  selectedNodes: string[];\n  setSelectedNodes: (links: string[]) => void;\n  /** 当前拖拽的节点 */\n  dragNode: Node;\n  updateNodes: (node: Node) => void;\n  updateLinks: (link: Link) => void;\n  deleteNodes: (selectedNodes: string[]) => void;\n  deleteLinks: (selectedLinks: string[]) => void;\n  copiedNodes: Node[];\n  setCopiedNodes: (nodes: Node[]) => void;\n}\n\nclass CanvasContentState {\n  /** 拖拽节点 */\n  isDraggingNode: boolean;\n  /** 拖拽边 */\n  isDraggingLink: boolean;\n  /** 拖拽节点 */\n  dragNode: Node;\n  /** 鼠标位置在拖动节点的偏移量 */\n  dragNodeOffset: any;\n  /** 移动边 */\n  dragLink: {\n    /** 源起节点id */\n    originId: string;\n    /** 源起节点 */\n    originX: number;\n    originY: number;\n    /** 鼠标移动节点 */\n    x: number;\n    y: number;\n    /** 来源边位置 */\n  };\n  sourcePos: string;\n  /** 对话框展示标志位 */\n  menuDisplay: boolean;\n  /** 对话框的位置信息 */\n  menuPos: MenuPos;\n  /** 画布的放大倍率 */\n  screenScale: number;\n  isKeyPressing: boolean;\n  /** 当前鼠标悬浮的节点 */\n  currentHoverNode: string;\n  /** 删除框 */\n  deleteVisible: boolean;\n}\n\nexport default class CanvasContent extends React.Component<\n  CanvasContentProps,\n  CanvasContentState\n> {\n  currTrans: ZoomTransform;\n  nodesContainerRef: any;\n  container: any;\n  handleApplyTransform: (transform: ZoomTransform) => void;\n  screenWidth: number;\n  screenHeight: number;\n\n  autoVerticalScroller: any = null;\n  autoHorizontalScroller: any = null;\n\n  handleResize: (isLarge: boolean) => void;\n  handleAdapt: () => void;\n  handleResizeTo: (scale: number, P0?: [number, number]) => void;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDraggingNode: false,\n      isDraggingLink: false,\n      isKeyPressing: false,\n      dragNode: null,\n      dragLink: null,\n      dragNodeOffset: null,\n      menuDisplay: false,\n      menuPos: {\n        id: \"\",\n        x: 0,\n        y: 0\n      },\n      screenScale: 100,\n      sourcePos: \"\",\n      currentHoverNode: \"\",\n      deleteVisible: false\n    };\n    this.nodesContainerRef = React.createRef();\n    this.container = React.createRef();\n    this.currTrans = zoomIdentity;\n\n  }\n\n  componentDidMount() {\n    this.nodesContainerRef.current.addEventListener(\n      \"mousedown\",\n      this.onNodesContainerMouseDown\n    );\n    this.container.current.addEventListener(\n      \"contextmenu\",\n      this.openContainerMenu\n    );\n    this.container.current.addEventListener(\"click\", this.onContainerMouseDown);\n  }\n\n  componentWillUnmount() {\n    this.nodesContainerRef.current.removeEventListener(\n      \"mousedown\",\n      this.onNodesContainerMouseDown\n    );\n    this.container.current.removeEventListener(\n      \"contextmenu\",\n      this.openContainerMenu\n    );\n    this.container.current.removeEventListener(\n      \"click\",\n      this.onContainerMouseDown\n    );\n  }\n\n  componentWillUpdate(\n    nextProps: CanvasContentProps,\n    nextState: CanvasContentState\n  ) {\n    if (this.state.isDraggingNode !== nextState.isDraggingNode) {\n      this.toggleDragNode(nextState.isDraggingNode);\n    }\n    if (this.state.isDraggingLink !== nextState.isDraggingLink) {\n      this.toggleDragLink(nextState.isDraggingLink);\n    }\n  }\n\n  /** 打开全局操作菜单，包括复制，粘贴，删除等 */\n  openContainerMenu = (event: any) => {\n    event.preventDefault();\n  };\n\n  toggleDragNode = (isDraggingNode: Boolean) => {\n    if (isDraggingNode) {\n      window.addEventListener(\"mousemove\", this.onDragNodeMouseMove);\n      window.addEventListener(\"mouseup\", this.onDragNodeMouseUp);\n    } else {\n      window.removeEventListener(\"mousemove\", this.onDragNodeMouseMove);\n      window.removeEventListener(\"mouseup\", this.onDragNodeMouseUp);\n    }\n  };\n\n  toggleDragLink = (isDraggingLink: Boolean) => {\n    if (isDraggingLink) {\n      window.addEventListener(\"mousemove\", this.onDragLinkMouseMove);\n      window.addEventListener(\"mouseup\", this.onDragLinkMouseUp);\n    } else {\n      window.removeEventListener(\"mousemove\", this.onDragLinkMouseMove);\n      window.removeEventListener(\"mouseup\", this.onDragLinkMouseUp);\n    }\n  };\n\n  onDragLinkMouseMove = (event: any) => {\n    event.stopPropagation();\n    event.preventDefault();\n\n    const { offsetTop, offsetLeft } = getOffset(this.container.current);\n    const screenX = event.clientX - offsetLeft;\n    const screenY = event.clientY - offsetTop;\n\n    const { k, x, y } = this.currTrans;\n\n    this.setState(preState => {\n      const { dragLink } = preState;\n      return {\n        dragLink: {\n          ...dragLink,\n          x: (screenX - x) / k,\n          y: (screenY - y) / k\n        }\n      };\n    });\n  };\n\n  /** 监听整个区域，提升性能 */\n  onNodesContainerMouseDown = (event: any) => {\n    event.stopPropagation();\n    const { nodes } = this.props;\n    if (nodes && nodes.length > 0) {\n      const component = _.find(nodes, c => {\n        if (c.ref && c.ref.current) {\n          return c.ref.current.contains(event.target);\n        }\n        return false;\n      });\n\n      const type = event.target.dataset && event.target.dataset.type;\n      const position = event.target.dataset && event.target.dataset.position;\n\n      if (component) {\n        if (type === \"edge\" && position) {\n          /** 拖拽连线 */\n          this.onDragLinkMouseDown(component as any, position);\n          return;\n        } else if (type === \"resize\") {\n          return;\n        } else {\n          /** 拖拽节点，排除resize节点 */\n          this.onDragNodeMouseDown(component as any, event);\n        }\n      }\n    }\n  };\n\n  /** 监听整个容器click事件 */\n  onContainerMouseDown = (event: any) => {\n    // event.stopPropagation();\n\n    // 过滤掉节点和边\n    const path = event.path;\n    const isNodeOrLink = this.hasNodeOrLink(path, \"editor-node\", \"editor-link\");\n    if (!isNodeOrLink) {\n      // 清空高亮的节点和边\n      this.handleClearActive();\n    }\n  };\n\n  /** 监听整个容器mousemove 事件 */\n  onNodesContainerMouseMove = (event: any) => {\n    event.preventDefault();\n    const path = event.path;\n    const isNodeOrLink = this.hasNodeOrLink(path, \"editor-node\", \"editor-link\");\n    const { nodes } = this.props;\n\n    if (nodes && nodes.length > 0) {\n      const currentNode = _.find(nodes, c => {\n        if (c.ref && c.ref.current) {\n          return c.ref.current.contains(event.target);\n        }\n        return false;\n      }) as Node;\n\n      if (currentNode) {\n        if (isNodeOrLink) {\n          this.setState({\n            currentHoverNode: currentNode.id\n          });\n        } else {\n          this.setState({\n            currentHoverNode: \"\"\n          });\n        }\n      }\n    }\n  };\n\n  /** 按下节点 */\n  onDragNodeMouseDown = (node: Node, event: any) => {\n    const { k, x, y } = this.currTrans;\n\n    const { offsetTop, offsetLeft } = getOffset(this.container.current);\n    const screenX = event.clientX - offsetLeft;\n    const screenY = event.clientY - offsetTop;\n\n    this.setState(preState => {\n      // 计算鼠标位置在节点中的偏移量\n      return {\n        isDraggingNode: true,\n        dragNode: node,\n        dragNodeOffset: {\n          x: (screenX - x) / k - node.x,\n          y: (screenY - y) / k - node.y\n        }\n      };\n    });\n  };\n\n  /** 鼠标按下，进行连线 */\n  onDragLinkMouseDown = (node: Node, position: string) => {\n    const { x, y } = calcLinkPosition(node, position);\n    this.setState({\n      isDraggingLink: true,\n      dragLink: {\n        originId: node.id,\n        originX: x,\n        originY: y,\n        x,\n        y\n      },\n      sourcePos: position\n    });\n  };\n\n  /** 鼠标抬起，连线结束 */\n  onDragLinkMouseUp = (event: any) => {\n    const { setLinks, links, nodes } = this.props;\n    const { dragLink } = this.state;\n    const { offsetTop, offsetLeft } = getOffset(this.container.current);\n    const screenX = event.clientX - offsetLeft;\n    const screenY = event.clientY - offsetTop;\n\n    const { k, x, y } = this.currTrans;\n\n    const nearNode = findNearbyNode(\n      {\n        x: (screenX - x) / k,\n        y: (screenY - y) / k\n      },\n      nodes,\n      LINK_AREA\n    );\n\n    // 需要找到链接的是哪个节点\n\n    if (nearNode) {\n      const { targetNode, targetPos } = nearNode;\n      const newLink = {\n        id:\n          dragLink.originId + CONNECTOR + targetNode.id + CONNECTOR + targetPos,\n        source: dragLink.originId,\n        target: targetNode.id,\n        sourcePos: this.state.sourcePos,\n        targetPos\n      };\n      setLinks([...links, newLink]);\n    }\n\n    this.setState({\n      isDraggingLink: false,\n      dragLink: null,\n      sourcePos: \"\"\n    });\n  };\n\n  /** 移动节点 */\n  onDragNodeMouseMove = (event: any) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const { setNodes, nodes } = this.props;\n\n    const { k, x, y } = this.currTrans;\n\n    const { offsetTop, offsetLeft } = getOffset(this.container.current);\n    const screenX = event.clientX - offsetLeft;\n    const screenY = event.clientY - offsetTop;\n\n    // 判断当前节点平移后是否溢出画布\n    // const isOver = this.checkNodeIsOverScreen(dragNode, screenX, screenY);\n\n    // if (!isOver) {\n    this.setState(preState => {\n      const { dragNode, dragNodeOffset } = preState;\n\n      const newX = (screenX - x) / k - dragNodeOffset.x;\n      const newY = (screenY - y) / k - dragNodeOffset.y;\n\n      return {\n        ...preState,\n        dragNode: {\n          ...dragNode,\n          x: newX,\n          y: newY\n        }\n      };\n    });\n\n    const { dragNodeOffset, dragNode } = this.state;\n\n    setNodes(\n      nodes.map(c => {\n        return c.id === dragNode.id\n          ? {\n              ...c,\n              x: (screenX - x) / k - dragNodeOffset.x,\n              y: (screenY - y) / k - dragNodeOffset.y\n            }\n          : c;\n      })\n    );\n  };\n\n  /** 放开节点 */\n  onDragNodeMouseUp = (event: any) => {\n    event.stopPropagation();\n    // this.moveStop(true);\n    // this.moveStop(false);\n\n    this.setState(preState => {\n      const { dragNode } = preState;\n\n      return {\n        ...preState\n      };\n    });\n    this.setState({\n      isDraggingNode: false\n    });\n  };\n\n  getTransformInfo = (currTrans: ZoomTransform) => {\n    this.currTrans = currTrans;\n  };\n\n  getScreenHandler = handleMap => {\n    this.handleApplyTransform = handleMap.handleApplyTransform;\n    this.handleResize = handleMap.handleResize;\n    this.handleResizeTo = handleMap.handleResizeTo;\n    this.handleAdapt = handleMap.handleAdapt;\n    this.screenWidth = handleMap.screenWidth;\n    this.screenHeight = handleMap.screenHeight;\n  };\n\n  onDrag(event, name: string) {}\n\n  onDrop(event: React.DragEvent<HTMLDivElement>) {\n    const { setNodes, nodes, dragNode } = this.props;\n    const { offsetTop, offsetLeft } = getOffset(this.container.current);\n    const screenX = event.clientX - offsetLeft;\n    const screenY = event.clientY - offsetTop;\n\n    const { k, x, y } = this.currTrans;\n\n    if (dragNode) {\n      const { key, name, type, width, height } = dragNode;\n\n      const newNode = {\n        key,\n        name,\n        type,\n        width,\n        height,\n        x: (screenX - x) / k - NODE_WIDTH / 2,\n        y: (screenY - y) / k - NODE_HEIGHT / 2,\n        id: uuid.v4(),\n        ref: React.createRef()\n      };\n\n      setNodes([...nodes, newNode]);\n    }\n  }\n\n\n  /** 清空高亮组件和连线 */\n  handleClearActive = () => {\n    this.props.setSelectedLinks([]);\n    this.props.setSelectedNodes([]);\n  };\n\n  /** 判断点击的节点是否为节点和边 */\n  hasNodeOrLink = (array: any[], node?: string, link?: string) => {\n    let isNodeOrLink = false;\n\n    for (let i = 0; i < array.length; i++) {\n      const inNode = _.includes(array[i].classList, node);\n      const inLink = _.includes(array[i].classList, link);\n\n      if (inNode || inLink) {\n        isNodeOrLink = true;\n        break;\n      }\n    }\n    return isNodeOrLink;\n  };\n\n  /** 改变缩放倍率 */\n  changeScreenScale = (screenScale: number) => {\n    this.setState({\n      screenScale\n    });\n  };\n\n  /** 处理全屏事件 */\n  handleFullScreen = () => {\n    const fullScreen = isFull();\n    if (fullScreen) {\n      exitFullscreen();\n    } else {\n      launchFullscreen(this.container.current);\n    }\n  };\n\n  renderDragSource() {\n    const dragSourceList = [\"组件1\", \"组件2\"];\n\n    return (\n      <div className=\"flow-drag-source\">\n        {dragSourceList.map((name, index) => {\n          return (\n            <div\n              className=\"flow-drag-source-item\"\n              key={index}\n              draggable\n              onDrag={event => this.onDrag(event, name)}\n            >\n              {name}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  /** 点击连线 */\n  onSelectLink = (key: string) => {\n    const { selectedLinks, setSelectedLinks } = this.props;\n    if (selectedLinks) {\n      // 若连线已高线，则取消高亮状态\n      const index = _.findIndex(selectedLinks, link => link === key);\n      if (index > -1) {\n        setSelectedLinks([\n          ...selectedLinks.slice(0, index),\n          ...selectedLinks.slice(index + 1)\n        ]);\n      } else {\n        setSelectedLinks([...selectedLinks, key]);\n      }\n    } else {\n      setSelectedLinks([key]);\n    }\n  };\n\n  /** 点击节点 */\n  onClickNode = (currentNode: Node) => {\n    const { selectedNodes, setSelectedNodes } = this.props;\n    const { isKeyPressing } = this.state;\n    // 区分多选按钮是否按下\n    if (isKeyPressing) {\n      if (selectedNodes) {\n        // 若节点已被点击则清除点击状态\n        const index = _.findIndex(selectedNodes, id => id === currentNode.id);\n        if (index > -1) {\n          setSelectedNodes([\n            ...selectedNodes.slice(0, index),\n            ...selectedNodes.slice(index + 1)\n          ]);\n        } else {\n          setSelectedNodes(_.compact([...selectedNodes, currentNode.id]));\n        }\n      } else {\n        setSelectedNodes([currentNode.id]);\n      }\n    } else {\n      this.props.setSelectedNodes([currentNode.id]);\n      // 清空高亮的连线\n      this.props.setSelectedLinks(null);\n    }\n  };\n\n  /** 被连线的节点 */\n  onSelectNode = (currentNode: Node, key: OperateType) => {\n    const { selectedNodes, deleteNodes } = this.props;\n    if (key === OperateType.delete) {\n      // 删除组件以及删除连线\n      // 判断改节点是否在多选区域内\n      if (selectedNodes && selectedNodes.includes(currentNode.id)) {\n        deleteNodes(_.compact([...selectedNodes, currentNode.id]));\n      } else {\n        deleteNodes([currentNode.id]);\n      }\n    }\n  };\n\n  /** 右键连线 */\n  onContextMenuLink = (\n    key: string,\n    event: React.MouseEvent<SVGPathElement, MouseEvent>\n  ) => {\n    event.preventDefault();\n    event.stopPropagation();\n    this.props.setSelectedLinks([key]);\n    // 清空高亮的组件\n    this.props.setSelectedNodes(null);\n\n    const currentPos = {\n      x: event.clientX,\n      y: event.clientY\n    };\n    this.setState({\n      deleteVisible: true,\n      menuPos: currentPos\n    });\n  };\n\n  /** 伸缩节点 */\n  onResize = (\n    node: Node,\n    width: number,\n    height: number,\n    x: number,\n    y: number\n  ) => {\n    const { updateNodes } = this.props;\n    const newNode = {\n      ...node,\n      width,\n      height,\n      x,\n      y\n    };\n    updateNodes(newNode);\n  };\n\n  renderCanvas = () => {\n    const { currentHoverNode } = this.state;\n    const { nodes, links, selectedNodes, selectedLinks } = this.props;\n    return (\n      <div className=\"editor-view\">\n        <div className=\"editor-view-content\" ref={this.nodesContainerRef}>\n          {nodes.map(child => {\n            const id = child.id;\n            const isSelected = selectedNodes\n              ? selectedNodes.includes(id)\n              : false;\n            const showSelector = isSelected || currentHoverNode === id;\n            return (\n              <EditorNode\n                nodeRef={child.ref}\n                currentNode={child}\n                key={id}\n                onClick={this.onClickNode}\n                isSelected={isSelected}\n                showSelector={showSelector}\n                onResize={this.onResize.bind(this, child)}\n                currTrans={this.currTrans}\n                onSelect={this.onSelectNode}\n              />\n            );\n          })}\n          <EditorEdges\n            links={links}\n            nodes={nodes}\n            selectedLinks={selectedLinks}\n            onContextMenu={this.onContextMenuLink}\n            onSelectLink={this.onSelectLink}\n            isDraggingLink={this.state.isDraggingLink}\n            dragLink={this.state.dragLink}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  render() {\n    const { deleteVisible, menuPos } = this.state;\n    return (\n      <div className=\"canvas-container-content\" ref={this.container}>\n        <ReScreen\n          type=\"DOM\"\n          getScreenHandler={this.getScreenHandler}\n          needMinimap={true}\n          needRefresh={true}\n          zoomEnabled={false}\n          mapPosition=\"RB-IN\"\n          mapWidth={320}\n          mapHeight={120}\n          onScreenChange={this.getTransformInfo}\n          onDragOver={event => {\n            event.preventDefault();\n          }}\n          onDrop={this.onDrop.bind(this)}\n        >\n          {this.renderCanvas()}\n        </ReScreen>\n        {/** 删除连线的菜单 */}\n        <ContextMenu\n          visible={deleteVisible}\n          // onHide={() => {\n          //   this.props.setLinks(null);\n          //   this.setState({\n          //     deleteVisible: false\n          //   });\n          // }}\n          left={menuPos.x}\n          top={menuPos.y}\n          // onClick={this.handleDeleteLinks.bind(this, selectedLinks)}\n        >\n          <Menu\n            getPopupContainer={(triggerNode: any) => triggerNode.parentNode}\n          >\n            {[\n              {\n                name: \"删除\",\n                key: OperateType.delete\n              }\n            ].map(child => {\n              return <Menu.Item key={child.key}>{child.name}</Menu.Item>;\n            })}\n          </Menu>\n        </ContextMenu>\n      </div>\n    );\n  }\n}\n","export const mockData = {\n  /**\n   * 主键ID\n   */\n  id: \"111\",\n  /**\n   * 管道名称/管道文件名\n   */\n\n  name: \"测试管道数据\",\n  /**\n   * 管道ID/管道文件ID\n   */\n\n  fileId: \"sdhsd\",\n\n  /**\n   * 租户ID\n   */\n  tenantId: \"168208\",\n  /**\n   * 项目ID\n   */\n\n  projectId: \"9987\",\n  /**\n   * 用户ID\n   */\n  userId: \"168208\",\n  /**\n   * 节点onwer\n   */\n  owner: \"perkinJ\",\n  /**\n   * owner展示名\n   */\n  ownerName: \"perkinJ\",\n  /**\n   * 节点创建时间\n   */\n  createTime: \"2019-12-10\",\n\n  /**\n   * 节点的最后修改者(id)\n   */\n  lastModifier: \"168208\",\n  /**\n   * 修改者展示名\n   */\n  lastModifierName: \"perkinJ\",\n  /**\n   * 最后修改时间\n   */\n  lastModifyTime: \"2019-12-10\",\n\n  /**\n   * 节点的调度配置,复用已存在的功能\n   */\n  nodeConfig: {\n    /**\n     * 节点id\n     */\n    nodeId: \"n_123\",\n    /**\n     * 节点名称\n     */\n    nodeName: \"节点名称\",\n\n    nodeOutputNameList: [\"Data_distill.id_mapping_dy_1\"],\n\n    nodeDesc: \"test\",\n    nodeType: 30,\n    operatorType: 30,\n    cronExpression: \"0 1 0 * * ?\",\n    nodeContent:\n      \"create table if not exists id_mapping_dy_1 (↵    key_type string,↵    key_id string, ↵    oneid string↵) partitioned by (ds string);\",\n    remark: \"test\",\n    params: null,\n    /**\n     * 数据源配置\n     */\n    dsConfig: { dsId: \"120104\" },\n    /**\n     * 所属的dagId\n     */\n    dagId: \"d_767389365932195840\",\n    /**\n     * 是否可以重跑\n     */\n    rerunable: null,\n    /**\n     * 有效时间区间\n     */\n    validPeriod: null,\n    /**\n     * 优先级, 1-最高, 数字越大优先级越低\n     * 是{@link Priority}的code\n     */\n    priority: null,\n    /**\n     * 节点状态, 1-正常,2-暂停,3-空跑\n     * 是{@link NodeStatusEnum}的code\n     */\n    nodeStatus: 1,\n    /**\n     * 是否是暂停状态\n     */\n    paused: null,\n    /**\n     * 上游依赖\n     * 注意这里的上游依赖{@link NodeRelation}只需要写sourceNodeOutputName和具体的依赖关系(如跨周期/跨天等)即可\n     */\n    upstreams: [\n      {\n        dayDiff: null,\n        periodDiff: 0,\n        sourceNodeId: \"n_767389365932195841\",\n        sourceNodeOutputName: \"virtual_root_node_767389365932195840\",\n        targetNodeId: null,\n        targetNodeOutputName: null\n      }\n    ],\n    /**\n     * 标识节点是由某个组织或应用创建的\n     */\n    nodeFrom: null,\n    nodeOwner: \"168208\",\n    /**\n     * 节点的标签信息\n     * 建议格式A: tagName=tagValue, tagName_2=tagValue_2\n     * 建议格式B: tag1, tag2\n     *\n     * @since v2.5.x\n     */\n    tags: []\n  },\n  faultTolerantConfig: {\n    errorCount: 10,\n    errorRate: 0.3,\n    readCount: 20\n  },\n  hops: [\n    {\n      id:\n        \"80bebab7-307a-4bf8-9545-c17e086a897e_05d35f38-8df0-4c5c-a917-036ef0bfca65\",\n      source: \"80bebab7-307a-4bf8-9545-c17e086a897e\",\n      target: \"05d35f38-8df0-4c5c-a917-036ef0bfca65\",\n      sourcePos: \"right\",\n      targetPos: \"top\"\n    }\n    // {\n    //   id: '80bebab7-307a-4bf8-9545-c17e086a897e_9d421eeb-84d6-4069-b42b-ce878e7b8efd',\n    //   source: '80bebab7-307a-4bf8-9545-c17e086a897e',\n    //   target: '9d421eeb-84d6-4069-b42b-ce878e7b8efd',\n    //   sourcePos: 'left',\n    //   targetPos: 'bottom'\n    // }\n  ],\n  steps: [\n    {\n      id: \"80bebab7-307a-4bf8-9545-c17e086a897e\",\n      key: \"rect\",\n      type: \"common\",\n      name: \"测试组件\",\n      x: 241,\n      y: 95,\n      width: 100,\n      height: 100,\n      distribute: true,\n      parallel: 2\n    },\n    {\n      id: \"05d35f38-8df0-4c5c-a917-036ef0bfca65\",\n      key: \"circle\",\n      name: \"MySQL_1\",\n      type: \"common\",\n      width: 250,\n      height: 100,\n      x: 449,\n      y: 259\n    }\n  ]\n};\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { Node, Link } from '../defines';\n// import constate from 'constate';\nimport { mockData } from '../mock';\n\nconst { useState, useEffect } = React;\n\nexport function useEditorStore() {\n  const [editorData, setEditorData] = useState();\n  const [nodes, setNodes] = useState<Node[]>([]);\n  const [links, setLinks] = useState<Link[]>([]);\n  const [selectedLinks, setSelectedLinks] = useState<string[]>([]);\n  const [selectedNodes, setSelectedNodes] = useState<string[]>([]);\n  const [dragNode, setDragNode] = useState(null);\n\n  const [copiedNodes, setCopiedNodes] = useState<Node[]>([]);\n\n  useEffect(() => {\n    setEditorData(mockData);\n\n    const newNodes = _.get(mockData, 'steps').map(item => {\n      return {\n        ...item,\n        /** åå§åæ°æ®ï¼å¢å ref */\n        ref: React.createRef()\n      };\n    });\n    setNodes(newNodes);\n    setLinks(_.get(mockData, 'hops'));\n  }, []);\n\n  const updateNodes = (node: Node) => {\n    const index = _.findIndex(nodes, item => item.id === node.id);\n\n    setNodes([...nodes.slice(0, index), node, ...nodes.slice(index + 1)]);\n  };\n\n  const updateLinks = (link: Link) => {\n    const index = _.findIndex(links, item => item.id === link.id);\n\n    setLinks([...links.slice(0, index), link, ...links.slice(index + 1)]);\n  };\n\n  return {\n    editorData,\n    setEditorData,\n    nodes,\n    setNodes,\n    links,\n    setLinks,\n    updateNodes,\n    updateLinks,\n    selectedLinks,\n    setSelectedLinks,\n    selectedNodes,\n    setSelectedNodes,\n    dragNode,\n    setDragNode,\n    copiedNodes,\n    setCopiedNodes\n  };\n}\n","import { useEffect, useCallback, useRef, RefObject } from 'react';\n\nexport type KeyPredicate = (event: KeyboardEvent) => boolean;\nexport type keyType = KeyboardEvent['keyCode'] | KeyboardEvent['key'];\nexport type KeyFilter = keyType | Array<keyType> | ((event: KeyboardEvent) => boolean);\nexport type EventHandler = (event: KeyboardEvent) => void;\nexport type keyEvent = 'keydown' | 'keyup';\nexport type RefType = HTMLElement | (() => HTMLElement | null);\nexport type EventOption = {\n  events?: Array<keyEvent>;\n  target?: Window | RefType;\n};\n\n// é®çäºä»¶ keyCode å«å\nconst aliasKeyCodeMap: any = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  delete: [8, 46]\n};\n\n// é®çäºä»¶ key å«å\nconst aliasKeyMap: any = {\n  esc: 'Escape',\n  tab: 'Tab',\n  enter: 'Enter',\n  space: ' ',\n  // IE11 uses key names without `Arrow` prefix for arrow keys.\n  up: ['Up', 'ArrowUp'],\n  left: ['Left', 'ArrowLeft'],\n  right: ['Right', 'ArrowRight'],\n  down: ['Down', 'ArrowDown'],\n  delete: ['Backspace', 'Delete']\n};\n\n// ä¿®é¥°é®\nconst modifierKey: any = {\n  ctrl: (event: KeyboardEvent) => event.ctrlKey,\n  shift: (event: KeyboardEvent) => event.shiftKey,\n  alt: (event: KeyboardEvent) => event.altKey,\n  meta: (event: KeyboardEvent) => event.metaKey\n};\n\n// è¿åç©ºå¯¹è±¡\nconst noop = () => {};\n\n/**\n * å¤æ­å¯¹è±¡ç±»å\n * @param [obj: any] åæ°å¯¹è±¡\n * @returns String\n */\nfunction isType(obj: any) {\n  return Object.prototype.toString\n    .call(obj)\n    .replace(/^\\[object (.+)\\]$/, '$1')\n    .toLowerCase();\n}\n\n/**\n * å¤æ­æé®æ¯å¦æ¿æ´»\n * @param [event: KeyboardEvent]é®çäºä»¶\n * @param [keyFilter: any] å½åé®\n * @returns Boolean\n */\nfunction genFilterKey(event: any, keyFilter: any) {\n  const type = isType(keyFilter);\n  // æ°å­ç±»åç´æ¥å¹éäºä»¶ç keyCode\n  if (type === 'number') {\n    return event.keyCode === keyFilter;\n  }\n  // å­ç¬¦ä¸²ä¾æ¬¡å¤æ­æ¯å¦æç»åé®\n  const genArr = keyFilter.split('.');\n  let genLen = 0;\n  for (const key of genArr) {\n    // ç»åé®\n    const genModifier = modifierKey[key];\n    // key å«å\n    const aliasKey = aliasKeyMap[key];\n    // keyCode å«å\n    const aliasKeyCode = aliasKeyCodeMap[key];\n    /**\n     * æ»¡è¶³ä»¥ä¸è§å\n     * 1. èªå®ä¹ç»åé®å«å\n     * 2. èªå®ä¹ key å«å\n     * 3. èªå®ä¹ keyCode å«å\n     * 4. å¹é key æ keyCode\n     */\n    if (\n      (genModifier && genModifier(event)) ||\n      (aliasKey && isType(aliasKey) === 'array' ? aliasKey.includes(event.key) : aliasKey === event.key) ||\n      (aliasKeyCode && isType(aliasKeyCode) === 'array'\n        ? aliasKeyCode.includes(event.keyCode)\n        : aliasKeyCode === event.keyCode) ||\n      event.key.toUpperCase() === key.toUpperCase()\n    ) {\n      genLen++;\n    }\n  }\n  return genLen === genArr.length;\n}\n\n/**\n * é®çè¾å¥é¢å¤çæ¹æ³\n * @param [keyFilter: any] å½åé®\n * @returns () => Boolean\n */\nfunction genKeyFormater(keyFilter: any): KeyPredicate {\n  const type = isType(keyFilter);\n  if (type === 'function') {\n    return keyFilter;\n  }\n  if (type === 'string' || type === 'number') {\n    return (event: KeyboardEvent) => genFilterKey(event, keyFilter);\n  }\n  if (type === 'array') {\n    return (event: KeyboardEvent) => keyFilter.some((item: any) => genFilterKey(event, item));\n  }\n  return keyFilter ? () => true : () => false;\n}\n\nconst defaultEvents: Array<keyEvent> = ['keydown'];\n\nfunction useKeyPress<T extends HTMLElement = HTMLInputElement>(\n  keyFilter: KeyFilter,\n  eventHandler: EventHandler = noop,\n  option: EventOption = {}\n): RefObject<T> {\n  const { events = defaultEvents, target } = option;\n  const element = useRef<T>();\n  const callbackRef = useRef(eventHandler);\n  callbackRef.current = eventHandler;\n\n  const callbackHandler = useCallback(\n    event => {\n      const genGuard: KeyPredicate = genKeyFormater(keyFilter);\n      if (genGuard(event)) {\n        return callbackRef.current(event);\n      }\n    },\n    [keyFilter]\n  );\n\n  useEffect(() => {\n    const targetElement = typeof target === 'function' ? target() : target;\n    const el = element.current || targetElement || window;\n    for (const eventName of events) {\n      el.addEventListener(eventName, callbackHandler);\n    }\n    return () => {\n      for (const eventName of events) {\n        el.removeEventListener(eventName, callbackHandler);\n      }\n    };\n  }, [events, callbackHandler, target]);\n\n  return element as RefObject<T>;\n}\n\nexport { useKeyPress };\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport * as uuid from 'uuid';\nimport { Toolbar, NodePanel } from './components';\nimport CanvasContent from './CanvasContent';\nimport { useEditorStore } from './hooks/useEditorStore';\nimport { useKeyPress } from './hooks/useKeyPress';\nimport './index.scss';\n\nconst { useState, useRef, useEffect } = React;\n\nexport default function EditorDemo(props) {\n  const [screenScale, changeScreenScale] = useState(100);\n  const {\n    nodes,\n    links,\n    setNodes,\n    setLinks,\n    selectedLinks,\n    setSelectedLinks,\n    dragNode,\n    setDragNode,\n    selectedNodes,\n    setSelectedNodes,\n    updateNodes,\n    updateLinks,\n    copiedNodes,\n    setCopiedNodes\n  } = useEditorStore();\n\n  // ç»å¸å®¹å¨\n  const screenRef = useRef(null);\n\n  // ç»å¸ ref\n  const canvasRef = useRef({\n    getWrappedInstance: () => Object\n  } as any);\n\n  const canvasInstance = canvasRef.current;\n\n  /** å é¤ç»ä»¶ */\n  const handleDeleteNodes = (ids: string[]) => {\n    if (!ids) {\n      return;\n    }\n    // å é¤ä¸ç»ä»¶ç¸è¿çè¿çº¿ï¼ä¸è®ºä¸æ¸¸æä¸æ¸¸\n\n    const newLinks = _.cloneDeep(links);\n    ids.forEach(id => {\n      // å é¤ä¸èç¹è¿æ¥çä»»æè¾¹\n      _.remove(newLinks, link => link.source === id || link.target === id);\n    });\n    // æ´æ°è¿çº¿\n    setLinks(newLinks);\n\n    // åé¤components\n    const cloneNodes = _.cloneDeep(nodes);\n    const newNodes = _.remove(cloneNodes, item => !ids.includes(item.id));\n\n    setNodes(newNodes);\n\n    // æ¸ç©ºé«äº®ç¶æ\n    setSelectedLinks([]);\n    setSelectedNodes([]);\n  };\n\n  /** å é¤è¿çº¿ */\n  const handleDeleteLinks = (activeLinks: string[]) => {\n    if (!activeLinks) {\n      return;\n    }\n    const linkList = links.map(link => link.id);\n    const diffLinks = _.difference(linkList, activeLinks);\n    const newLinks = diffLinks ? diffLinks.map(link => _.find(links, item => item.id === link)) : [];\n    setLinks(newLinks);\n  };\n\n  /** å¤å¶èç¹ */\n  const handleNodesCopy = (ids: string[]) => {\n    const newCopiedNodes = ids.map(id => {\n      return _.find(nodes, item => item.id === id);\n    });\n\n    setCopiedNodes(newCopiedNodes);\n  };\n\n  /** ç²è´´èç¹ */\n  const handleNodesPaste = () => {\n    if (copiedNodes) {\n      const currentCopied = copiedNodes.map(node => {\n        return {\n          ...node,\n          id: uuid.v4(),\n          /**  @todo åç»­å¯ä¼åå¸å±ç®æ³ */\n          x: node.x + node.width + 20,\n          ref: React.createRef()\n        };\n      });\n      setCopiedNodes(currentCopied);\n      setNodes([...nodes, ...currentCopied]);\n    }\n  };\n\n  // åªå\n  const handleShear = () => {\n    if (selectedNodes) {\n      handleNodesCopy(selectedNodes);\n      handleDeleteNodes(selectedNodes);\n    }\n  };\n\n  // å¤å¶\n  const handleCopy = () => {\n    if (selectedNodes) {\n      handleNodesCopy(selectedNodes);\n    }\n  };\n\n  // ç²è´´\n  const handlePaste = () => {\n    if (copiedNodes) {\n      handleNodesPaste();\n    }\n  };\n\n  // å é¤\n  const handleDelete = () => {\n    if (selectedNodes) {\n      handleDeleteNodes(selectedNodes);\n    }\n    if (selectedLinks) {\n      handleDeleteLinks(selectedLinks);\n    }\n  };\n\n  useKeyPress(\n    'delete',\n    () => {\n      handleDelete();\n    },\n    {\n      events: ['keydown', 'keyup']\n    }\n  );\n\n  const isMac = navigator.platform.startsWith('Mac');\n\n  useKeyPress(isMac ? ['meta.x'] : ['ctrl.x'], () => {\n    handleShear();\n  });\n\n  useKeyPress(isMac ? ['meta.c'] : ['ctrl.c'], () => {\n    handleCopy();\n  });\n\n  useKeyPress(isMac ? ['meta.v'] : ['ctrl.v'], () => {\n    handlePaste();\n  });\n\n  \n\n  /** æä½åº */\n  const renderOperation = (\n    <div>\n      <Toolbar\n        ref={screenRef}\n        screenScale={screenScale}\n        changeScreenScale={changeScreenScale}\n        handleResizeTo={canvasInstance && canvasInstance.handleResizeTo}\n        items={['fullscreen', 'zoom', 'adapt', 'format', 'ratio', 'shear', 'copy', 'paste', 'delete']}\n        layout={canvasInstance && canvasInstance.layout}\n        onCopy={handleCopy}\n        onPaste={handlePaste}\n        onDelete={handleDelete}\n        onShear={handleShear}\n      />\n    </div>\n  );\n  /** æ¸²æèç¹éæ©åº */\n  const renderNodePanel = (\n    <div className=\"editor-nodePanel\">\n      <NodePanel onDrag={setDragNode} />\n    </div>\n  );\n\n  /** æ¸²æä¸­é´ç»å¸åº */\n  const renderCanvas = (\n    <div className=\"editor-canvas\">\n      <CanvasContent\n        dragNode={dragNode}\n        ref={canvasRef}\n        nodes={nodes}\n        links={links}\n        setNodes={setNodes}\n        setLinks={setLinks}\n        selectedLinks={selectedLinks}\n        setSelectedLinks={setSelectedLinks}\n        selectedNodes={selectedNodes}\n        setSelectedNodes={setSelectedNodes}\n        updateNodes={updateNodes}\n        updateLinks={updateLinks}\n        deleteNodes={handleDeleteNodes}\n        deleteLinks={handleDeleteLinks}\n        copiedNodes={copiedNodes}\n        setCopiedNodes={setCopiedNodes}\n      />\n    </div>\n  );\n\n  /** æ¸²æéç½®åº */\n  const renderProperty = <div className=\"editor-property\"></div>;\n\n  return (\n    <div className=\"editor-demo\" ref={screenRef}>\n      <div className=\"editor-operation\">{renderOperation}</div>\n      <div className=\"editor-container\">\n        {renderNodePanel}\n        {renderCanvas}\n        {renderProperty}\n      </div>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { render } from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n","import * as React from \"react\";\nimport Editor from \"./editor\";\nimport \"./styles.css\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Editor />\n    </div>\n  );\n}\n"],"sourceRoot":""}